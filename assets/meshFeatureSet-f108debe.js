import{aY as d,o as h,b3 as y,a$ as S,M as l,n as M}from"./index-c6cfe049.js";import{$ as g}from"./Mesh-3ddead1a.js";import{N,o as D,i as w}from"./MeshTransform-a9f50040.js";import{s as F}from"./infoFor3D-24efd44a.js";import{d as T}from"./FeatureSet-402c1fc5.js";import"./imageUtils-e8ffa805.js";import"./MeshVertexAttributes-dcaaa9d9.js";import"./MeshLocalVertexSpace-411e8581.js";import"./meshVertexSpaceUtils-b044d3fd.js";import"./earcut-354b01bb.js";import"./DoubleArray-2311ad80.js";import"./Indices-0a1fac5a.js";import"./plane-4b4dad37.js";import"./vec42-614f5847.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./quatf64-81e039e4.js";import"./vec4f64-430e4feb.js";import"./deduplicate-273abec2.js";import"./projection-d79f34ed.js";import"./spatialReferenceEllipsoidUtils-eca7bf87.js";import"./computeTranslationToOriginAndRotation-ad79d5a8.js";import"./BufferView-b0b4cfa5.js";import"./vec3-a9852a06.js";import"./vec4-4ea09148.js";import"./vertexSpaceConversion-bfc515e6.js";import"./quat-caf9fdb6.js";const I=()=>M.getLogger("esri.rest.support.meshFeatureSet");function it(t,r,e){const o=e.features;e.features=[],delete e.geometryType;const n=T.fromJSON(e);if(n.geometryType="mesh",!e.assetMaps)return n;const s=x(r,e.assetMaps),i=t.sourceSpatialReference??d.WGS84,m=e.globalIdFieldName,{outFields:a}=t,c=a!=null&&a.length>0?$(a.includes("*")?null:new Set(a)):()=>({});for(const u of o){const p=L(u,m,i,r,s);n.features.push(new h({geometry:p,attributes:c(u)}))}return n}function $(t){return({attributes:r})=>{if(!r)return{};if(!t)return r;for(const e in r)t.has(e)||delete r[e];return r}}function L(t,r,e,o,n){const s=t.attributes[r],i=n.get(s);if(i==null||!t.geometry)return null;const m=O(t,e,o),a=y.fromJSON(t.geometry);a.spatialReference=e;const c=b(t.attributes,o),u=e.isGeographic?"local":"georeferenced",p=A(i);return p?g.createWithExternalSource(m,p,{extent:a,transform:c,vertexSpace:u}):g.createIncomplete(m,{extent:a,transform:c,vertexSpace:u})}function O({attributes:t},r,{transformFieldRoles:e}){const o=t[e.originX],n=t[e.originY],s=t[e.originZ];return new S({x:o,y:n,z:s,spatialReference:r})}function b(t,{transformFieldRoles:r}){return new N({translation:[t[r.translationX],-t[r.translationZ],t[r.translationY]],rotationAxis:[t[r.rotationX],-t[r.rotationZ],t[r.rotationY]],rotationAngle:t[r.rotationDeg],scale:[t[r.scaleX],t[r.scaleZ],t[r.scaleY]]})}var f;function x(t,r){const e=new Map;for(const o of r){const n=o.parentGlobalId;if(n==null)continue;const s=o.assetName,i=o.assetType,m=o.assetHash,a=o.assetURL,c=o.conversionStatus,u=o.seqNo,p=F(i,t.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=l(e,n,()=>({files:new Map}));l(E.files,s,()=>({name:s,type:i,mimeType:p,status:P(c),parts:[]})).parts[u]={hash:m,url:a}}return e}function A(t){const r=Array.from(t.files.values()),e=new Array;for(const o of r){if(o.status!==f.COMPLETED)return null;const n=new Array;for(const s of o.parts){if(!s)return null;n.push(new D(s.url,s.hash))}e.push(new w(o.name,o.mimeType,n))}return e}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{x as assetMapFromAssetMapsJSON,L as extractMesh,it as meshFeatureSetFromJSON};
