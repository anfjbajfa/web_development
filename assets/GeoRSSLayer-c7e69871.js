import{cr as p,aV as y,U as u,dc as d,bo as m,i as o,y as i,bf as c,b3 as h,j as S,dS as n,X as f,dT as g,W as v,Y as b,cl as C}from"./index-c6cfe049.js";import{S as G}from"./MultiOriginJSONSupport-7cf2254f.js";import{l as w}from"./BlendLayer-3864a0e6.js";import{b as P}from"./OperationalLayer-d666f103.js";import{j as _}from"./PortalLayer-089ac58c.js";import{f as x}from"./RefreshableLayer-768cbb26.js";import{t as R}from"./ScaleRangeLayer-2709e17c.js";import{g as j,y as k,p as $}from"./commonProperties-b537568a.js";import"./jsonUtils-a377b268.js";import"./parser-7740a44f.js";import"./portalItemUtils-bca17985.js";import"./ElevationInfo-58ee6e4f.js";import"./lengthUtils-806c8c03.js";const F=["atom","xml"],E={base:n,key:"type",typeMap:{"simple-line":f},errorContext:"symbol"},M={base:n,key:"type",typeMap:{"picture-marker":g,"simple-marker":v},errorContext:"symbol"},T={base:n,key:"type",typeMap:{"simple-fill":b},errorContext:"symbol"};let t=class extends w(x(P(_(R(G(C)))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}readFeatureCollections(e,r){return r.featureCollection.layers.forEach(s=>{var a;const l=s.layerDefinition.drawingInfo.renderer.symbol;l&&l.type==="esriSFS"&&((a=l.outline)!=null&&a.style.includes("esriSFS"))&&(l.outline.style="esriSLSSolid")}),r.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?p(this.url,F)||"GeoRSS":e}set title(e){this._set("title",e)}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(y).then(()=>this._fetchService(r)).then(s=>{this.read(s,{origin:"service"})})),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){const r=this.spatialReference,{data:s}=await u(m.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:d(r)?void 0:r.wkid??JSON.stringify(r)},signal:e});return s}_hasGeometry(e){var r;return((r=this.featureCollections)==null?void 0:r.some(s=>{var l,a;return((l=s.featureSet)==null?void 0:l.geometryType)===e&&((a=s.featureSet.features)==null?void 0:a.length)>0}))??!1}};o([i()],t.prototype,"description",void 0),o([i()],t.prototype,"featureCollections",void 0),o([c("service","featureCollections",["featureCollection.layers"])],t.prototype,"readFeatureCollections",null),o([i({type:h,json:{name:"lookAtExtent"}})],t.prototype,"fullExtent",void 0),o([i(j)],t.prototype,"id",void 0),o([i(k)],t.prototype,"legendEnabled",void 0),o([i({types:E,json:{write:!0}})],t.prototype,"lineSymbol",void 0),o([i({type:["show","hide"]})],t.prototype,"listMode",void 0),o([i({types:M,json:{write:!0}})],t.prototype,"pointSymbol",void 0),o([i({types:T,json:{write:!0}})],t.prototype,"polygonSymbol",void 0),o([i({type:["GeoRSS"]})],t.prototype,"operationalLayerType",void 0),o([i($)],t.prototype,"url",void 0),o([i({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],t.prototype,"title",null),o([i({readOnly:!0,json:{read:!1},value:"geo-rss"})],t.prototype,"type",void 0),t=o([S("esri.layers.GeoRSSLayer")],t);const Y=t;export{Y as default};
