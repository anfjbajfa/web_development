import{A as g,bl as G,cB as L,aU as P,o as I}from"./index-c6cfe049.js";import{n as T,a as F,m as $}from"./TimeOnly-430d9cda.js";import{t as J}from"./ImmutableArray-d5cad66d.js";import M from"./FeatureLayer-8ad4904b.js";import{d as z}from"./FeatureSet-402c1fc5.js";import"./UnknownTimeZone-b1c85c08.js";import"./UniqueValueRenderer-2d905f9d.js";import"./ColorStop-3bd1e817.js";import"./diffUtils-a81eba90.js";import"./colorRamps-2725f079.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-57487c58.js";import"./lengthUtils-806c8c03.js";import"./jsonUtils-17af088a.js";import"./defaults-458d9190.js";import"./defaultsJSON-59981e75.js";import"./styleUtils-12717ade.js";import"./jsonUtils-0cfa0239.js";import"./LRUCache-be26918b.js";import"./Version-d58b3305.js";import"./FieldsIndex-815a254a.js";import"./OverrideHelper-78bed9ed.js";import"./colorUtils-60e0b64a.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./utils-2af5df8d.js";import"./quantizationUtils-07a0781e.js";import"./heatmapUtils-dc73c34c.js";import"./MultiOriginJSONSupport-7cf2254f.js";import"./commonProperties-b537568a.js";import"./ElevationInfo-58ee6e4f.js";import"./FeatureLayerBase-c91a0e0e.js";import"./featureLayerUtils-6e37b4eb.js";import"./RelationshipQuery-21a3a6e4.js";import"./LayerFloorInfo-b8c105f0.js";import"./Relationship-96215281.js";import"./serviceCapabilitiesUtils-27401658.js";import"./editsZScale-d0d79ab9.js";import"./queryZScale-679c8a27.js";import"./APIKeyMixin-99f87d3a.js";import"./ArcGISService-866655aa.js";import"./BlendLayer-3864a0e6.js";import"./jsonUtils-a377b268.js";import"./parser-7740a44f.js";import"./CustomParametersMixin-d7ae0b0b.js";import"./EditBusLayer-1e67be81.js";import"./FeatureEffectLayer-ad153b3a.js";import"./FeatureEffect-0fa11288.js";import"./FeatureReductionLayer-d2b80ebd.js";import"./FeatureReductionSelection-4696fdf2.js";import"./labelingInfo-754601fb.js";import"./labelUtils-e96173b2.js";import"./MD5-715f37cd.js";import"./OperationalLayer-d666f103.js";import"./OrderedLayer-4b37be9f.js";import"./OrderByInfo-3aa9a06f.js";import"./PortalLayer-089ac58c.js";import"./portalItemUtils-bca17985.js";import"./RefreshableLayer-768cbb26.js";import"./ScaleRangeLayer-2709e17c.js";import"./TemporalLayer-58903be1.js";import"./TimeInfo-3ab6fbf6.js";import"./FeatureTemplate-1f82a77c.js";import"./FeatureType-b94bd31c.js";import"./fieldProperties-abc74b98.js";import"./versionUtils-20464c3d.js";import"./styleUtils-4d80df86.js";import"./TopFeaturesQuery-4768fc42.js";import"./popupUtils-c2bd8f97.js";import"./interfaces-f1f22245.js";let b=null;function B(e,n,a,o={}){const t=n.elementType,i="value",c=t.type==="array"?[{name:i,type:t.type,elementType:t.elementType}]:t.type==="dictionary"?[{name:i,type:t.type,properties:t.properties}]:[{name:i,type:t.type}];return new J(e.map(p=>{const r={};return w(r,c,{[i]:p},a,o),r[i]}))}function E(e,n,a={}){const o=e instanceof z?new M({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return n.constructFeatureSet(o,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function N(e,n,a={}){const{spatialReference:o,interceptor:t,lruCache:i}=a;return typeof e=="string"?n.createFeatureSetCollectionFromService(e,o,i,t):n.createFeatureSetCollectionFromMap(e,o,i,t)}function Y(e,n,a,o={}){const t={};return w(t,n.properties,e,a,o),new b.Dictionary(t)}function w(e,n,a,o,t={}){const i={};for(const c of Object.keys(a))i[c.toLowerCase()]=a[c];for(const c of n){const p=c.name.toLowerCase();if(t.variablesPreProcessed)e[p]=i[p];else switch(c.type){case"array":{const r=i[p];e[p]=r==null?null:B(r,c,o,t);break}case"feature":{const r=i[p];e[p]=r==null?null:b.Feature.createFromGraphic(r,t==null?void 0:t.timeZone);break}case"featureSet":{const r=i[p];e[p]=r==null?null:o?E(r,o,t):null;break}case"featureSetCollection":{const r=i[p];e[p]=r==null?null:o?N(r,o,t):null;break}case"dictionary":{const r=i[p];e[p]=r==null?null:Y(r,c,o,t);break}case"date":{const r=i[p];e[p]=r?r instanceof $?r:t!=null&&t.timeZone?$.dateJSAndZoneToArcadeDate(r,t==null?void 0:t.timeZone):$.dateJSToArcadeDate(r):null;break}case"dateOnly":{const r=i[p];e[p]=r?r instanceof F?r:F.fromReader(r):null;break}case"time":{const r=i[p];e[p]=r?r instanceof T?r:T.fromReader(r):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[p]=i[p]}}}function O(e,n){for(const a of e)n.push(a),a.type==="dictionary"&&O(a.properties,n);return n}function R(e,n,a,o,t){const{spatialReference:i,interceptor:c,lruCache:p,console:r,abortSignal:u,timeZone:m,services:S={portal:P.getDefault()}}=a,f={vars:{},spatialReference:i,interceptor:c,timeZone:m,lrucache:p,useAsync:t,services:S,console:r,abortSignal:u};return n&&w(f.vars,e.variables,n,o,a),f}function v(e,n){switch(n.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const a=(e.type,e),o="geometry"in a?a.geometry():null,t="readAttributes"in a?a.readAttributes():a.attributes;return new I({geometry:o,attributes:t})}case"dictionary":{const a=e,o=a.attributes,t={};for(const i of Object.keys(o))t[i]=v(a.field(i),n);return t}case"array":return("toArray"in e?e.toArray():e).map(a=>v(a,n))}return e}const U={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"}]},Z={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},D=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",U],["popup-element",U],["feature-reduction-popup",Z],["feature-reduction-popup-element",Z],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function st(e){const n=D.get(e);if(!n){const a=Array.from(D.keys()).map(o=>`'${o}'`).join(", ");throw new g("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${a}`)}return G(n)}async function ct(e,n,a={}){b||(b=await L());const{arcade:o,arcadeUtils:t}=b,{loadScriptDependencies:i,referencesMember:c,scriptIsAsync:p}=o,r=O(n.variables,[]),u=r.filter(s=>s.type==="featureSet"||s.type==="featureSetCollection").map(s=>s.name.toLowerCase()),m=o.parseScript(e,u);if(!m)throw new g("arcade:invalid-script","Unable to create SyntaxTree");const S=t.extractFieldNames(m),f=o.scriptTouchesGeometry(m),C=r.map(s=>s.name.toLowerCase()).filter(s=>c(m,s)),l=p(m,u);await i(m,l,u);const h={vars:{},spatialReference:null,useAsync:l};for(const s of C)h.vars[s]="any";const{lruCache:A}=a,x=o.compileScript(m,h),k=o.featureSetUtils(),{services:j}=a;return{execute:(s,y={})=>{if(l)throw new g("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const d=x(R(n,s,{lruCache:A,...y},k,l));return y.rawOutput?d:v(d,t)},executeAsync:async(s,y={})=>{const d=await x(R(n,s,{lruCache:A,services:j,...y},k,l));return y.rawOutput?d:v(d,t)},isAsync:l,variablesUsed:C,fieldsUsed:S,geometryUsed:f,syntaxTree:m}}export{ct as createArcadeExecutor,st as createArcadeProfile};
