import{dd as f,de as h,D as g,df as m,B as p,dg as y,dh as a,_ as w}from"./index-c6cfe049.js";import{n as _}from"./date-294ce3fb.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(r){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=r}}function c(n){return new b(n)}class q{constructor(r){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=r}}function A(n){return new q(n)}const u=new Set;function D(n,r,t,d=!1){u.clear();for(const i in t){const e=n.get(i);if(!e)continue;const o=P(e,t[i]);if(u.add(e.name),e&&(d||e.editable)){const l=f(e,o);if(l)return c(h(l,e,o));r[e.name]=o}}for(const i of(n==null?void 0:n.requiredFields)??[])if(!u.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,r){let t=r;return g(n)&&typeof r=="string"?t=parseFloat(r):m(n)&&r!=null&&typeof r!="string"?t=String(r):p(n)&&typeof r=="string"&&(t=_(r)),y(t)}let s;function F(n,r){if(!n||!a(r))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(r,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-4425bd7e.js"),["assets/geometryEngineJSON-4425bd7e.js","assets/geometryEngineBase-235836ba.js","assets/index-c6cfe049.js","assets/index-16a932bd.css","assets/geometryEngineJSON-c883e0c0.js","assets/json-48e3ea08.js"])),s}async function G(n,r){!a(n)||r!=="esriGeometryPolygon"&&r!=="esriGeometryPolyline"||await j()}export{A as d,c as f,G as j,D as p,F as y};
