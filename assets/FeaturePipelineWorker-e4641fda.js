import{kL as Ce,g as Te,j4 as dt,cD as Me,b$ as $e,aY as O,bS as ss,kM as rs,hD as is,b0 as ns,b3 as as,dU as Ue,av as We,j_ as Z,aF as b,f4 as qe,u as lt,aQ as Y,bd as _t,c4 as os,bz as hs,bu as us,i as W,y as ee,j as pt,a2 as gt,k as fe,A as D,ac as cs,n as ds,kN as ls,eF as ne,gt as re,gs as _s,hH as ft,af as ps,eG as yt,U as gs,cm as fs,d as ys,bJ as ms,gJ as bs,kO as Is,dJ as ws}from"./index-c6cfe049.js";import{a as k}from"./definitions-f33e80b3.js";import{d as mt,y as Ge,s as Ne}from"./diffUtils-a81eba90.js";import{n as Be,M as Ee,p as Oe,c as bt,i as Re,d as Ss,a as vs,b as xs,e as ks,f as Fs}from"./AttributeStore-035e9a1b.js";import{o as Cs}from"./tileUtils-c2f19f52.js";import{r as Ts,W as Ms}from"./MeshWriterRegistry-e388677a.js";import{g as $s,e as qs,c as It,N as Es,n as wt,p as Os,b as Rs,w as As,a as N,K as St,O as Ps,r as js,f as vt}from"./featureConversionUtils-830d3ed6.js";import{s as H,e as G,a as F}from"./OptimizedFeature-059c854c.js";import{x as Ds,j as ie}from"./timeSupport-b14221ad.js";import{o as Ls,$ as xt}from"./QueryEngine-61769534.js";import{Z as kt}from"./FieldsIndex-815a254a.js";import{d as zs,c as Ve,S as Us}from"./query-6eccb0bd.js";import{s as Ft}from"./quantizationUtils-07a0781e.js";import{$ as Ye}from"./ogcFeatureUtils-6e09f6ad.js";import{n as Ws}from"./pbf-459508d1.js";import{b as Gs,h as Ns}from"./pbfQueryUtils-90563513.js";import{t as Xe}from"./CircularArray-50add9d1.js";import{createConnection as Bs}from"./createConnection-082d2efc.js";import{d as Vs}from"./UpdateTracking2D-ebe3e38b.js";import"./LabelMetric-18a06377.js";import"./enums-fb32c1bb.js";import"./Texture-6d5abce7.js";import"./enums-2e633670.js";import"./Program-ceb7c31f.js";import"./VertexElementDescriptor-2925c6af.js";import"./labelUtils-e96173b2.js";import"./TimeOnly-430d9cda.js";import"./UnknownTimeZone-b1c85c08.js";import"./highlightReasons-54b6b965.js";import"./PieChartMeshWriter-ae28c4b3.js";import"./GeometryUtils-a7dec725.js";import"./TurboLine-572fca47.js";import"./utils-2af5df8d.js";import"./earcut-354b01bb.js";import"./constants-991354c8.js";import"./grouping-7ae298b7.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./json-48e3ea08.js";import"./LRUCache-be26918b.js";import"./WhereClause-7f089e1b.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-23dcd7dc.js";import"./heatmapUtils-dc73c34c.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./utils-c1c7e04b.js";import"./utils-ef13d521.js";import"./ClassBreaksDefinition-de3e12a5.js";import"./queryZScale-679c8a27.js";import"./geojson-1f0c3015.js";import"./date-294ce3fb.js";import"./clientSideDefaults-bc8f2b5a.js";import"./defaultsJSON-59981e75.js";import"./sourceUtils-447c99e4.js";import"./BidiEngine-26aff129.js";import"./Rect-ea14f53a.js";import"./defaults-458d9190.js";import"./BindType-d21d71dd.js";import"./Util-bd8e9eff.js";let Ys=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){Ce(this._eventLog.onEvent(e))}};const ae=1,Ae=2,oe=4,Pe=8,je=16,he=32,De=64,ue=128;function de(u){switch(u){case ae:case Pe:case he:return-1;case Ae:case De:return 0;case oe:case je:case ue:return 1}}function le(u){switch(u){case ae:case Ae:case oe:return-1;case Pe:case je:return 0;case he:case De:case ue:return 1}}const Qe=ae|Pe|he,Ze=oe|je|ue,He=ae|Ae|oe,Je=he|De|ue;let Xs=class{constructor(e,t,s,r=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=r,this._meshes={self:new Be(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0,this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===0}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,i)=>{const n=r.serialize(),a=1<<i,o=de(a),h=le(a),d=Cs(new Te(this.tileKey),o,h,e);t.message.push({tileId:d.id,...n.message}),t.transferList.push(...n.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(k/2,s),n=Math.min(k/2,r),a=255^((e<0+i?Ze:e>=k-i?Qe:Ze|Qe)|(t<0+n?Je:t>=k-n?He:Je|He));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const n=-de(t)*k,a=-le(t)*k;if(a!==0)continue;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[e]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new Be(t,n)}const s=this._meshes.neighbors[e],r=-de(t)*k,i=-le(t)*k;s.copyLastFrom(this._meshes.self,r,i)}}}},Qs=class{},L=class Ct{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new Ct;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const r=this.getBackgroundFill();if(r)return[...r,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Zs=class Tt extends L{static async fromDictionaryRenderer(e,t){return new Tt(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await this._context.createMeshWriters(i.meshes);this._hashToGroup.set(r,n)}},Hs=class Mt extends L{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new Mt(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async a=>{const o=await e.createMeshWriters(a.meshes);r.add(a,o)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}doMatch(e,t){var r;const s=(r=this._field)==null?void 0:r.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:n,result:a}=this._intervals[i],o=s>=n.min,h=this._isMaxInclusive?s<=n.max:s<n.max;if(o&&h)return a}return null}},Js=class $t extends L{static async fromLabelSchema(e,t){const s=t.classes.map(async i=>{const n=await e.createMeshWriters(i.meshes);return{minScale:i.minScale,maxScale:i.maxScale,meshes:n,expression:null,where:await e.storage.createWhereClause(i.where)}}),r=await Promise.all(s);return new $t(r)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const i of s)i.where&&!i.where(e)||r.push(...i.meshes);return r}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Ks=class qt extends L{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(o=>!!o),i=new qt(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),await Promise.all(t.map.map(async(o,h)=>{const d=await e.createMeshWriters(o.symbol);o.value==="<Null>"?i.setNullResult(d):i.add(o.value,d,h+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){var i;const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return(i=this._resultsMap.get(r))==null?void 0:i.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function X(u,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return L.from(u,e);case"interval":return Hs.fromIntervalSchema(u,e);case"dictionary":return Zs.fromDictionaryRenderer(u,e);case"label":return Js.fromLabelSchema(u,e);case"map":return Ks.fromMatcherSchema(u,e);case"subtype":return er.fromSubtypes(u,e);case"cluster":return tr.fromClusterSchema(u,e);default:throw new Error("Impl")}}let er=class Et extends L{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const n=parseInt(i,10),a=X(e,t.renderers[i]).then(o=>s.set(n,o));r.push(a)}return await Promise.all(r),new Et(s,t.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}},tr=class Ot extends L{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([X(e,t.feature),X(e,t.cluster)]);return new Ot(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},sr=class Rt extends Qs{static async create(e,t){const s=await X(e,t.symbology),r=t.labels?await X(e,t.labels):null;return new Rt(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){var s;await Promise.all([this._symbology.fetchResources(e,t),(s=this._labels)==null?void 0:s.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s);if(!i)return;for(const n of i)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},rr=class{constructor(e,t,s,r){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r}async createMeshWriters(e){const t=e.map(s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s));return Promise.all(t)}},ir=class{constructor(e){this._outstandingMessages=[],this._queue=new dt({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},At=class ye{static async create(e,t){var r;if(t.statisticType==="count"){const i=new Ts(1);return new ye(t.name,t.alias,t.type,t.statisticType,i)}const s=await e.createComputedField({expression:(r=t.onStatisticExpression)==null?void 0:r.expression,field:t.onStatisticField});return new ye(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},Le=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},Pt=class{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){var t;(t=this._sendStates.get(e.key.id))==null||t.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}afterUpdateChunks(){}},jt=class extends Pt{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this.events=new Me,this.featureAdapter=Ls}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new xt({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(e){}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=$e();for(const r of e){const i=$s(s,r.geometry,!1,!1);i&&t(i)}}},ze=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},me=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},T=class j extends Ee{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=qs([],e,r,!1,!1,s);for(let n=0;n<i.length;n++)i[n].displayId=e[n].displayId;return j.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=It(e,t.objectIdField);return j.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=j.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new kt(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new j(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new j([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter(s=>!(s.objectId!=null&&t.has(s.objectId)))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){var e;return(e=this._current)==null?void 0:e.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new j(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return H(this._current)?Es(this._current.geometry,2):0}_readX(){return H(this._current)?this._current.geometry.coords[0]:0}_readY(){return H(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return H(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){var i;if(!this._fieldsIndex){const n=this._current.attributes[e];if(n!==void 0)return n;const a=e.toLowerCase();for(const o in this._current.attributes)if(o.toLowerCase()===a)return this._current.attributes[o];return}const s=this._fieldsIndex.get(e);if(!s)return;let r=this._current.attributes[s.name];return r==null?r:(((i=this.fields.get(e))==null?void 0:i.type)==="esriFieldTypeTimestampOffset"&&(r=this.parseTimestampOffset(r)),t&&this.fields.isDateField(e)?new Date(r):r)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}},nr=class extends Le{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&Os(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},ar=class Dt extends jt{static async create(e,t,s,r,i){const n=new Oe({spatialReference:t}),a=await Promise.all(e.fields.map(async h=>At.create(n,h))),o=e.featureFilter?await bt.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Ds(t,O.WGS84),new Dt(e,o,i,a,t,s,r)}constructor(e,t,s,r,i,n,a){super(n,a,i,r),this._schema=e,this._featureFilter=t,this._timeZone=s,this._metadata=new Re({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fields:e.fields,globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new nr(e,this._attributeStore)}async*applyLocalEdit(e){for(const t of this._sendStates.values())t.reset(),yield new ze(t.subscription,T.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace()){const{objectId:o,displayId:h}=a,d=r.get(o);if(d!=null){const c=s(h,d,o);i.push(c),r.delete(o)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const n of i.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...wt(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace())e(s)}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:s}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:n}=e,a=r.tile;if(e.done)return;for(const f of t.chunks()){if(s.has(f.chunkId))continue;s.add(f.chunkId);const p=f.queryInfo;if("tileId"in p){const y=new Te(p.tileId);if(y.level!==a.level||y.world!==a.key.world)continue}f.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],h=r.tile.transform,d=r.tile.key.level;for(const f of i.values()){let p=n.get(f.id);if(p)p.attributes=f.getAttributes();else{const y=f.getGeometry(this.spatialReference,h);p=new G(y,f.getAttributes(),null),y||(p.centroid=f.getGeometricCentroid(this.spatialReference,h)),p.objectId=f.id,p.displayId=this._attributeStore.createDisplayIdForObjectId(`${p.objectId}.${d}`),n.set(f.id,p)}o.push(p)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const c=T.fromOptimizedFeatures(o,this._metadata,h),_=c.getCursor(),g=e.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;_.next();)this._attributeStore.setAttributeData(_.getDisplayId(),_,g);yield new me(e.subscription,c,[],e.done,{})}},Lt=class{constructor(e){this._statistics=e}get statistics(){return this._statistics}};const Ke=Math.PI/180;let zt=class be{static create(e){return new be(e.map(t=>or(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new be(this._statistics.map(e=>e.clone()))}};function or(u){switch(u.statisticType){case"min":return new hr(u);case"max":return new ur(u);case"avg":return new dr(u);case"avg_angle":return new lr(u);case"sum":case"count":return new cr(u);case"mode":return new _r(u)}}let B=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);Ss(s)||this._insertValue(s)}},hr=class Ut extends B{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new Ut(this.field);return e.value=this.value,e}},ur=class Wt extends B{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Wt(this.field);return e.value=this.value,e}},cr=class Gt extends B{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Gt(this.field);return e.value=this.value,e}},dr=class Nt extends B{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new Nt(this.field);return e._total=this._total,e._count=this._count,e}},lr=class Bt extends B{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Ke),this._y=this._y+Math.sin(e*Ke),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Bt(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},_r=class Vt extends B{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Vt(this.field);return e._frequencies=new Map(this._frequencies),e}},Ie=class te extends Lt{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new te(e,t,zt.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return te.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new te(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Rs(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:As(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new F([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const n=new F;return N(n,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new F([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new F;return N(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new F([],[s,r]);if(t!=null){const n=new F;return N(n,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},Yt=class{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(e))return;let i=0,n=0;if(e.geometryType==="esriGeometryPoint")i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const o=e.readCentroidForDisplay();if(o==null)return;const[h,d]=o.coords;if(h<0||h>k||d<0||d>k)return}const a=e.readCentroidWorldSpace();if(a==null)return;i=a.coords[0],n=a.coords[1]}this._insert(e,i,n,t)}};const pr=96;function we(u,e){return ss(u)*rs*pr/e}let gr=class extends Yt{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=we(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,n,a,o]=r,h=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),d=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),c=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),_=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let g=d;g<=_;g++)for(let l=h;l<=c;l++){const f=`${l}.${g}`,p=this._cells.get(f);if(!p)continue;const y=e.get(p.id);y?p&&!e.has(p.id)&&y.merge(p):e.set(p.id,p.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,n=s*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,o).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=Ie.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Ie.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},fr=class{constructor(e,t){this.inner=e,this.displayId=t}};const J=128;let yr=class extends Le{constructor(e){super(e),this.didSend=!1,this.done=!1}},mr=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new G(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId,yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const a of e){const o=a.queryInfo;"tileId"in o&&new Te(o.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),s=!0,a.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=we(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of t){const o=a.tile.bounds,h=Math.floor(o[0]*i/n),d=Math.floor(o[1]*i/n),c=Math.ceil(o[2]*i/n),_=Math.ceil(o[3]*i/n);r.xMin=Math.min(r.xMin,h),r.yMin=Math.min(r.yMin,d),r.xMax=Math.max(r.xMax,c),r.yMax=Math.max(r.yMax,_)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const o=n.inner.getCentroidY(i),h=s.tile.lod,d=h.wrap?h.worldSize[0]:null,c=n.inner.count===1?n.inner.firstObjectId:n.inner.id,_=n.displayId;if(d!=null)if(d===1){const g=new F([],[a,o]),l=new G(g,n.inner.getAttributes(),null);l.geometry.coords[0]-=k,l.objectId=c,l.displayId=_,r.push(l);const f=new F([],[a,o]),p=new G(f,n.inner.getAttributes(),null);p.geometry.coords[0]+=k,p.objectId=c,p.displayId=_,r.push(p)}else a>k+k/2?a-=d*k:a<-k/2&&(a+=d*k);if(a<k+J&&a>=-J&&o<k+J&&o>=-J){const g=new F([],[a,o]),l=new G(g,n.inner.getAttributes(),null);l.objectId=c,l.displayId=_,r.push(l)}}return T.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((a,o)=>o.count-a.count);const s=[];for(const a of this._clusters.values())s.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/we(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of t){if(n.has(a.id)||a.gridX<e.xMin||a.gridX>e.xMax||a.gridY<e.yMin||a.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(a.id),h=new fr(a.clone(),o);n.add(a.id),this._clusters.set(a.id,h);const d=a.centroidXWorld,c=a.centroidYWorld;for(let _=a.gridY-i;_<=a.gridY+i;_++)for(let g=a.gridX-i;g<=a.gridX+i;g++){if(_===a.gridY&&g===a.gridX)continue;const l=this._cells.get(Ie.createId(g,_));if(!l||n.has(l.id))continue;const f=Math.abs(l.centroidXWorld-d),p=Math.abs(l.centroidYWorld-c);f<r&&p<r&&(h.inner.merge(l),n.add(l.id))}}for(const a of s)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,n=r.field,a=e.get(n.name);if(a){const{minValue:o,maxValue:h}=a,d=Math.min(a.minValue,i),c=Math.max(a.maxValue,i);o===d&&h===c||(a.minValue=d,a.maxValue=c,s=!0)}else e.set(n.name,{minValue:i,maxValue:i}),s=!0}return s}},br=class Xt extends jt{static async create(e,t,s,r,i,n){const a=new Oe({spatialReference:s}),o={type:"grid",fields:await Promise.all(t.fields.map(async h=>At.create(a,h))),spatialReference:s,featureFilter:t.featureFilter?await bt.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:n};return new Xt(e,t.clusterRadius,o,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=new Re({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fields:[...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new yr(e)}async*applyLocalEdit(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.clusters()){const o=r.get(a.inner.id);if(o==null){if(a.inner.count===1){const h=r.get(a.inner.firstObjectId);if(h!=null){const d=s(a.displayId,h,a.inner.firstObjectId);i.push(d),r.delete(a.inner.firstObjectId)}}}else{const h=s(a.displayId,o,a.inner.id);i.push(h),r.delete(a.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.aggregatesWorldSpace())if(t.has(a.displayId)&&!s.has(a.displayId)){const o=wt(a,this._metadata.geometryType,!1,!1);if(s.add(a.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:a.displayId});continue}i.push({...o,displayId:a.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),i=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(a=>a.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(a=>i.has(a)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new mr(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);yield new ze(e.subscription,r,!0,e.done,{})}},Ir=class Qt{static fromReader(e){const t=[],s=e.copy(),r=$e();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=is(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return i.load(t),new Qt(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const wr=64;function Sr(u,e,t,s){const r=[u.xmin,u.ymin,u.xmax,u.ymax],i=ns.fromExtent(as.fromBounds(r,s)),n=ie(i,s,O.WGS84,{densificationStep:e*wr});if(!n)return null;const a=St(new F,n,!1,!1),o=a.coords.filter((p,y)=>!(y%2)),h=a.coords.filter((p,y)=>y%2),d=Math.min(...o),c=Math.min(...h),_=Math.max(...o),g=Math.max(...h),l=Se(d,c,t,O.WGS84),f=Se(_,g,t,O.WGS84);return l&&f?{bounds:r,geohashBounds:{xLL:l[0],yLL:l[1],xTR:f[0],yTR:f[1]},level:t}:null}function Se(u,e,t,s){if(s.isWebMercator){const n=Ue(u/We.radius),a=n-360*Math.floor((n+180)/360),o=[0,0];return et(o,0,Ue(Math.PI/2-2*Math.atan(Math.exp(-e/We.radius))),a,t),o}const r=ie({x:u,y:e},s,O.WGS84);if(!r)return null;const i=[0,0];return et(i,0,r.y,r.x,t),i}function vr(u,e){let t=-90,s=90,r=-180,i=180;for(let n=0;n<e;n++){const a=Math.ceil((n+1)/2),o=Math.floor((n+1)/2),h=1-n%2,d=30-(3*a+2*o),c=30-(2*a+3*o),_=3*h+2*(1-h),g=2*h+3*(1-h),l=3*h+7*(1-h)<<c,f=(7*h+3*(1-h)<<d&u.geohashX)>>d,p=(l&u.geohashY)>>c;for(let y=_-1;y>=0;y--){const m=(r+i)/2,I=f&1<<y?1:0;r=(1-I)*r+I*m,i=(1-I)*m+I*i}for(let y=g-1;y>=0;y--){const m=(t+s)/2,I=p&1<<y?1:0;t=(1-I)*t+I*m,s=(1-I)*m+I*s}}return[r,t,i,s]}function et(u,e,t,s,r){r%2&&(r+=1);let i=0,n=0,a=-90,o=90,h=-180,d=180;for(let c=0;c<r/2;c++){for(let _=0;_<5;_++){const g=(h+d)/2,l=s>g?1:0;i|=l<<29-(_+5*c),h=(1-l)*h+l*g,d=(1-l)*g+l*d}for(let _=0;_<5;_++){const g=(a+o)/2,l=t>g?1:0;n|=l<<29-(_+5*c),a=(1-l)*a+l*g,o=(1-l)*g+l*o}}u[2*e]=i,u[2*e+1]=n}let tt=class ve extends Lt{static create(e,t,s,r){const i=zt.create(e),n=new Array(32);for(let a=0;a<n.length;a++)n[a]=null;return new ve(i,t,s,r,n)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new ve(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=ie({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},O.WGS84,e),h=St(new F,o,!1,!1);return t!=null?N(new F,h,!1,!1,"esriGeometryPolygon",t,!1,!1):h}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=ie({x:(r+n)/2,y:(i+a)/2},O.WGS84,e),h=Ps(new F,o);return t!=null?N(new F,h,!1,!1,"esriGeometryPoint",t,!1,!1):h}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,n){if(r>=s)return this;const a=1-r%2,o=3*a+2*(1-a),h=2*a+3*(1-a),d=30-i-o,c=30-n-h,_=((e&7*a+3*(1-a)<<d)>>d)+((t&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),g=this.children[_];return g==null?null:g.find(e,t,s,r+1,i+o,n+h)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return vr({geohashX:n,geohashY:a},this.depth)}};class xr{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=tt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,n,a){let o=this._root,h=0,d=0,c=0;for(;o!==null;){if(o.insert(e,t,s,r,i,a),h>=n)return;const _=Math.ceil((h+1)/2),g=Math.floor((h+1)/2),l=1-h%2,f=30-(3*_+2*g),p=30-(2*_+3*g),y=(r&7*l+3*(1-l)<<f)>>f,m=(i&3*l+7*(1-l)<<p)>>p,I=y+m*(8*l+4*(1-l));d=d<<3*l+2*(1-l)|y,c=c<<2*l+3*(1-l)|m,o.children[I]==null&&(o.children[I]=tt.create(this._fields,d,c,h+1),this._depth=Math.max(this._depth,h+1),this._size+=1),h+=1,o=o.children[I]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const n=i.depth,a=i.xNode,o=i.yNode;if(n>=r){t.push(i),i=i.next;continue}const h=Math.ceil((n+1)/2),d=Math.floor((n+1)/2),c=1-n%2,_=30-(3*h+2*d),g=30-(2*h+3*d),l=~((1<<_)-1),f=~((1<<g)-1),p=(s.xLL&l)>>_,y=(s.yLL&f)>>g,m=(s.xTR&l)>>_,I=(s.yTR&f)>>g,x=a<<3*c+2*(1-c),w=o<<2*c+3*(1-c),S=x+8*c+4*(1-c),v=w+4*c+8*(1-c),$=Math.max(x,p),C=Math.max(w,y),q=Math.min(S,m),R=Math.min(v,I);let M=null,E=null;for(let A=C;A<=R;A++)for(let P=$;P<=q;P++){const ts=P-x+(A-w)*(8*c+4*(1-c)),V=i.children[ts];V&&(M||(M=V,M.next=i.next),E&&(E.next=V),E=V,V.next=i.next)}i=M||i.next}return t}}let kr=class extends Yt{constructor(e){super(e),this._tree=new xr(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,n=Sr(t,s,r,i);n!=null&&this._tree.putBins(e,n)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:n}=this._options,a=Se(t,s,i,n);a&&this._tree.insert(e,t,s,a[0],a[1],i,r)}},Fr=class xe extends Ee{static from(e,t){return new xe(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[c,_]=e.scale,[g,l]=e.translate;return this._displayTranslationX=-g/c,this._displayScaleX=1/c,this._displayTranslationY=l/_,this._displayScaleY=1/-_,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[h,d]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-h)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+d)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new xe(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new F;return N(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){var t;const e=(t=this._reader.readCentroidForDisplay())==null?void 0:t.clone();if(e){const[s,r]=e.coords;e.coords[0]=s*this._displayScaleX+this._displayTranslationX,e.coords[1]=r*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return js(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},Q=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return Fr.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new gr(e);break;case"geohash":this._aggregateIndex=new kr(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=Ir.fromReader(this.reader)),this._spatialIndex}},ke=class extends Q{constructor(e,t){super(),this.metadata=e,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=t,this.normalizedChunkId=t}get reader(){return T.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overriddenIds.clear();n.next();){const o=n.readOptimizedFeatureWorldSpace(),h=o.objectId;r.push(o),i.add(h),this.overriddenIds.add(h),this.removed.delete(h)}for(const o of this._features){const h=o.objectId;a.has(h)||i.has(h)||(r.push(o),this.overriddenIds.add(h))}this._features=r;for(const o of i.values())this.removed.delete(o);for(const o of s)this.removed.add(o),this.overriddenIds.add(o)}removeOverrides(e){this.invalidate();const t=e.reader.getCursor(),s=new Set;for(;t.next();){const r=t.getObjectId();this.overriddenIds.has(r)&&(s.add(r),this.overriddenIds.delete(r))}this._features=this._features.filter(r=>!s.has(r.objectId))}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},Cr=class extends Le{},Tr=class extends Pt{constructor(e,t,s){super(e,t),this._timeZone=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._timeZone)}createState(e){return new Cr(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const o=a.getObjectId(),h=a.getDisplayId(),d=r.get(o);if(d!=null){const c=s(h,d,o);i.push(c),r.delete(o)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),o=n.getDisplayId();t.has(o)&&!s.has(a)&&(r.push({...n.readLegacyFeatureWorldSpace(),displayId:o}),s.add(a))}}return{features:r,aggregates:[]}}async*applyLocalEdit(e){const t=[],s=e.reader.getCursor();for(;s.next();){const a=s.getObjectId();t.push(a);const o=this._attributeStore.createDisplayIdForObjectId(a);s.setDisplayId(o),this._attributeStore.setAttributeData(o,s,this._evalOptions)}const r=this.getDisplayIds(t),i=this.getDisplayIds(e.removed),n=new ke(this._source.metadata,"localEdit");n.applyOverrides(e),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(n.chunkId),yield new me(a.subscription,null,r,!1,n.queryInfo);for(const a of this._sendStates.values()){const o=n.getTileReader(a.subscription.tile);yield new me(a.subscription,o,i,!1,n.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new ze(e.subscription,n,!1,r.end,r.queryInfo))}}},Mr=class{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new Ms,this._proxy=new vs({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new xs({isLocal:!1,update:s=>Ce(this._connection.container.updateAttributeView(s))})}destroy(){var e;this._proxy.destroy(),(e=this._strategy)==null||e.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){var e;return(e=this._strategy)==null?void 0:e.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){var t;(t=this._strategy)==null||t.onSubscribe(e)}onUnsubscribe(e){var t;(t=this._strategy)==null||t.onUnsubscribe(e)}async update(e,t,s,r,i){var f,p,y,m,I;const n=e.processor,a=Z((f=this._schema)==null?void 0:f.storage,n.storage),o=Z((p=this._schema)==null?void 0:p.mesh.properties,n.mesh.properties),h=Z((y=this._schema)==null?void 0:y.mesh.factory,n.mesh.factory),d=Z((m=this._schema)==null?void 0:m.mesh.strategy,n.mesh.strategy),c=o||h||d;if(!(a||c)&&!r)return;b("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:mt(this._schema,n),schema:n}),this._schema=n;const _=O.fromJSON(this._source.service.outSpatialReference),g=new Oe({fields:this._source.metadata.fieldsIndex,spatialReference:_});if(await this._attributeStore.update(n.storage,g,this._source.metadata,_,t),(I=this._strategy)==null||I.invalidateAttributeData(),!r&&!c)return;(d||o)&&await this._updateStrategy(n.mesh.strategy,_,i,n.mesh.properties.timeZone),this._updateSortKey(g,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const l=new rr(g,this._proxy,s,this._registry);return(h||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await sr.create(l,n.mesh.factory)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(e){if(!this._strategy)return;const t=this._strategy.applyLocalEdit(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){var e;await this._doUpdateChunks(),(e=this._strategy)==null||e.afterUpdateChunks()}async removeChunks(e){var t;(t=this._strategy)==null||t.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new ir({concurrency:16,process:a=>this._process(a)}),s.set(r.id,i));const n=i.push(r).catch(a=>qe(a));t.push(n)}try{await Promise.all(t)}catch{}b("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),b("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){var i;switch((i=this._strategy)==null||i.destroy(),e.type){case"feature":this._strategy=new Tr(this._source,this._attributeStore,r);break;case"binning":this._strategy=await ar.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await br.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const n of s)this._strategy.onSubscribe(n)}async _updateSortKey(e,t){var s;if(this._sortInfo=lt((s=this._sortInfo)==null?void 0:s.computed),t!=null){const r=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:r}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){var o,h,d;const t=e.subscription;if(b("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),Y(t.signal);const s=await this._write(e,t.tile.createArcadeEvaluationOptions((o=this._schema)==null?void 0:o.mesh.properties.timeZone)),r=t.tile.tileInfoView.tileInfo.isWrappable,{message:i,transferList:n}=s.serialize(r),a={objectIdMap:null,inner:e.createMessage(i,this._version,this._attributeStore.epoch)};if((h=this._schema)!=null&&h.mesh.properties.returnMeshObjectId){a.objectIdMap={};const c=(d=e.reader)==null?void 0:d.getCursor();if(c)for(;c.next();)a.objectIdMap[c.getDisplayId()]=c.getObjectId()}if(Y(t.signal),await this._connection.container.onMessage(a,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),b("esri-2d-update-debug")){const c=t.tile;console.debug(`Version[${this._version}] Tile[${c.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){var h;const s=e.subscription.tile,r=(h=e.reader)==null?void 0:h.getCursor(),i=(r==null?void 0:r.getSize())??0,n=s.tileInfoView.tileInfo.isWrappable,a=new Xs(s.key,this._strategy.enablePixelBuffering,n,i);if(!r)return a;const o=s.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;r.next();){const d=this._getSortKeyValue(r,t);a.entityStart(r.getDisplayId(),d),this._factory.write(a,this._proxy,r,o,s.level),a.entityEnd()}return a}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s==null?void 0:s.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}},$r=class Zt{static from(e){let t=0,s=0,r=0;return e.forEach(i=>{const n=i._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((a,o)=>a+o,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new Zt(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const _e=4;function qr(u,e,t){const s=u.orderByFields??t.objectIdField+" ASC",r=u.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&hs(r.path))&&t.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:O.fromJSON(u.outSpatialReference),orderByFields:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields};if(e.type==="feature"){const{gdbVersion:n,historicMoment:a,timeExtent:o}=e.mutable.dataFilter;return{...i,gdbVersion:n,historicMoment:a?new Date(a):null,timeExtent:o?us.fromJSON(o):null,outFields:e.mutable.availableFields}}return i}let Er=class Ht{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[];return new Ht(qr(e,t,s),r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,n){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=s,this._customParameters=r,this._geometryType=i,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?_e:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const s=e.clone();if(this._queryParams.outFields[0]==="*"){if((s.outFields??[])[0]==="*")return null;s.outFields=this._queryParams.outFields}else{const r=new Set(this._queryParams.outFields),i=[];for(const n of r)t.hasField(n)||i.push(n);if(i.length===0)return null;s.outFields=i}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new _t({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const i=this._queryScaleRanges.filter(n=>(!n.minScale||n.minScale>=e.maxScale)&&(!n.maxScale||n.maxScale<=e.minScale)).map(n=>n.subtypeCode);if(i.length){const n=`${this._subtypeField} IN (${i})`;r.where=os(r.where,n)}}if(r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*b("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=b("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=_e),b("esri-tiles-debug")){const i=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:i}:{tileId:i}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:_e})}};const Or=2500;let se=class extends gt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([fe(()=>{var t;return((t=this._strategy)==null?void 0:t.connectionStatus)??"disconnected"},t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),fe(()=>{var t;return((t=this._strategy)==null?void 0:t.errorString)||null},t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(s=>s(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){var e;(e=this._strategy)==null||e.disconnect()}connect(){var e;(e=this._strategy)==null||e.connect()}clear(){var e;(e=this._strategy)==null||e.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>Or){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};W([ee()],se.prototype,"_strategy",void 0),se=W([pt("esri.views.2d.layers.features.sources.StreamMessenger")],se);let Jt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}};const pe=268435455;let Rr=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Ar(u,e,t=!1){var $;const h=u.asUnsafe(),d=h.pos(),c=new Rr;let _=0,g=0;const l=1,f=2,p=4,y=3;let m=null,I=null,x=null,w=!1;const S=[];for(;h.next();)switch(h.tag()){case 1:m=h.getString();break;case 3:I=h.getString();break;case 12:x=h.processMessage(Ns);break;case 9:if(c.exceededTransferLimit=h.getBool(),c.exceededTransferLimit){c.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),c.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let C=0;C<c.centroid.length;C++)c.centroid[C]=pe}break;case 13:{const C=h.processMessage(Gs);C.index=_++,S.push(C);break}case 15:{const C=h.getLength(),q=h.pos()+C;if(!c.exceededTransferLimit){const M=c.offsets.geometry,E=c.centroid;M.push(0),E.push(pe),E.push(pe)}!w&&c.exceededTransferLimit&&(w=!0,c.offsets.attributes=t?new Float64Array(8e3*_):new Uint32Array(8e3*_));let R=g*_;for(;h.pos()<q&&h.next();)switch(h.tag()){case l:{w?c.offsets.attributes[R++]=h.pos():c.offsets.attributes.push(h.pos());const M=h.getLength();h.skipLen(M);break}case f:if(e){const M=h.getLength(),E=h.pos()+M;for(;h.pos()<E&&h.next();)switch(h.tag()){case y:{h.getUInt32();const A=h.getSInt64(),P=h.getSInt64();c.centroid[2*g]=A,c.centroid[2*g+1]=P;break}default:h.skip()}}else{c.offsets.geometry[g]=h.pos();const M=h.getLength();c.vertexCount+=M,h.skipLen(M)}break;case p:{const M=h.getLength(),E=h.pos()+M;for(;h.pos()<E&&h.next();)switch(h.tag()){case y:{h.getUInt32();const A=h.getSInt64(),P=h.getSInt64();c.centroid[2*g]=A,c.centroid[2*g+1]=P;break}default:h.skip()}break}default:h.skip()}g++,c.hasFeatures=!0;break}default:h.skip()}const v=m||I;if(!v)throw new D("FeatureSet has no objectId or globalId field name");return c.fields=new kt(S),c.featureCount=g,c.fieldCount=_,c.objectIdFieldIndex=($=c.fields.get(v))==null?void 0:$.index,c.transform=x,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),h.move(d),c}const Pr=!0,st=268435455,rt=128,it=128e3,z={small:{delta:new Int32Array(rt),decoded:new Int32Array(rt)},large:{delta:new Int32Array(it),decoded:new Int32Array(it)}};function nt(u){return u<=z.small.delta.length?z.small:(u<=z.large.delta.length||(z.large.delta=new Int32Array(Math.round(1.25*u)),z.large.decoded=new Int32Array(Math.round(1.25*u))),z.large)}function jr(u){try{const t=new Ws(new Uint8Array(u),new DataView(u));for(;t.next();){if(t.tag()===2)return Dr(t.getMessage());t.skip()}}catch(e){const t=new D("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});ds.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Dr(u){for(;u.next();){if(u.tag()===1)return u.getMessage();u.skip()}return null}function Lr(u){const d=u.getLength(),c=u.pos()+d;for(;u.pos()<c&&u.next();)switch(u.tag()){case 1:return u.getString();case 2:return u.getFloat();case 3:return u.getDouble();case 4:return u.getSInt32();case 5:return u.getUInt32();case 6:return u.getInt64();case 7:return u.getUInt64();case 8:return u.getSInt64();case 9:return u.getBool();default:return u.skip(),null}return null}function zr(u,e,t,s,r,i){return .5*Math.abs(u*s+t*i+r*e-u*i-t*e-r*s)}function ge(u,e,t,s){return u*s-t*e===0&&u*t+e*s>0}let Ur=class Fe extends Ee{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=jr(e),n=Ar(i,r==="esriGeometryPoint",s);return new Fe(i,n,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Fe(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===st?null:new F([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===st)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new F([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return(t==null?void 0:t.coords.length)===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){var n;const s=this._header.fields.get(e);if(s==null)return;let r=this._readAttributeAtIndex(s.index);((n=this.fields.get(e))==null?void 0:n.type)==="esriFieldTypeTimestampOffset"&&(r=this.parseTimestampOffset(r));const i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new ks(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=Lr(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=nt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const a of r.lengths){for(let o=1;o<a;o++){const h=2*(n+o),d=2*(n+o-1);i[h]+=i[d],i[h+1]+=i[d+1]}n+=a}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const h=r.getUInt32(),d=r.pos()+h;for(;r.pos()<d;)o.push(r.getUInt32());break}case 3:{const h=r.getUInt32(),d=r.pos()+h;for(a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<d;)a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new F(o,a)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];let h=0,d=0,c=null,_=0;const g=this.geometryType==="esriGeometryPolygon";for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const l=r.getUInt32(),f=r.pos()+l;for(;r.pos()<f;){const p=r.getUInt32();a.push(p),h+=p}c=nt(2*h).delta;break}case 3:{r.getUInt32();const l=2+(this.hasZ?1:0)+(this.hasM?1:0);cs(c);for(const f of a)if(d+l*f>c.length)for(let p=0;p<f;p++)r.getSInt32(),r.getSInt32(),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();else if(g&&Pr){const p=this.getAreaSimplificationThreshold(f,this._header.vertexCount);let y=2,m=1;const I=!1;let x=r.getSInt32(),w=r.getSInt32();c[d++]=x,c[d++]=w,this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();let S=r.getSInt32(),v=r.getSInt32();for(this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();y<f;){let $=r.getSInt32(),C=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();const q=x+S,R=w+v;zr(x,w,q,R,q+$,R+C)>=p?(_+=-.5*(q-x)*(R+w),m>1&&ge(c[d-2],c[d-1],S,v)?(c[d-2]+=S,c[d-1]+=v):(c[d++]=S,c[d++]=v,m++),x=q,w=R):($+=S,C+=v),S=$,v=C,y++}m<3||I?d-=2*m:(_+=-.5*(x+S-x)*(w+v+w),ge(c[d-2],c[d-1],S,v)?(c[d-2]+=S,c[d-1]+=v,o.push(m)):(c[d++]=S,c[d++]=v,o.push(++m)))}else{let p=0,y=r.getSInt32(),m=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),c[d++]=y,c[d++]=m,p+=1;for(let I=1;I<f;I++){const x=r.getSInt32(),w=r.getSInt32(),S=y+x,v=m+w;_+=-.5*(S-y)*(v+m),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),I>2&&ge(c[d-2],c[d-1],x,w)?(c[d-2]+=x,c[d-1]+=w):(c[d++]=x,c[d++]=w,p+=1),y=S,m=v}o.push(p)}break}default:r.skip()}return this._cache.area=_,o.length?new F(o,c):c!=null?this._createQuantizedExtrudedGeometry(c[0],c[1]):null}};class ce{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Wr(u,e){switch(u.type){case"memory":return new Nr(u,e);case"ogc":return new Yr(u,e);case"feature-service":return u.queryMetadata.supportsFormatPBF&&b("featurelayer-pbf")?new Br(u,e):new Vr(u,e)}}async function Gr(u){const e=new ls;return await e.open(u,{}),e}let Nr=class extends ce{constructor(e,t){super(e,t),this._portsOpen=Gr(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return T.fromFeatureSet(s,this._metadata)}};class Br extends ce{async executeQuery(e,t){const{data:s}=await zs(this.service.source,e,t),r=!e.quantizationParameters;return Ur.fromBuffer(s,this._metadata,r)}}class Vr extends ce{async executeQuery(e,t){var n;const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const a=e.clone(),o=Ft(a.quantizationParameters);a.quantizationParameters=null;const{data:h}=await Ve(s,a,this._metadata.spatialReference,t),d=It(h,this._metadata.objectIdField);return vt(o,d),T.fromOptimizedFeatureSet(d,this._metadata)}const{data:i}=await Ve(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=(n=i.features)==null?void 0:n.filter(a=>{if(a.geometry!=null){const o=a.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),T.fromFeatureSet(i,this._metadata)}}let Yr=class extends ce{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),i=Ft(r.quantizationParameters);r.quantizationParameters=null;const n=await Ye(this.service.source,e,t);return vt(i,n),T.fromOptimizedFeatureSet(n,this._metadata)}const s=await Ye(this.service.source,e,t);return T.fromOptimizedFeatureSet(s,this._metadata)}},Kt=class extends Jt{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._connection=i,this._queue=new dt({concurrency:16,process:async n=>{var o;const a={signal:(o=n.options)==null?void 0:o.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=Wr(e,r)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map(async r=>{const i=_t.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i),null}catch(n){return n}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new D("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryByObjectId(e){if(e.length===0)return T.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t)}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},es=class extends Kt{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(b("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)b("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}},at=class extends Q{constructor(e,t,s,r,i,n){var a,o;super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${(a=this._sourceTile)==null?void 0:a.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${(o=this._sourceTile)==null?void 0:o.key.normalizedId}${this._end?"e":""}`}get queryInfo(){var e;return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:(e=this._sourceTile)==null?void 0:e.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},Xr=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=ne([re(e.signal,()=>this._controller.abort()),re(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},Qr=class extends es{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Xr(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:n,reader:a,sourceTile:o,sourceTileDepth:h,tile:d}=i,c=new at(a,n,d,o,h,!1);Y(t.options),this._addChunk(c)}}catch(i){s=i}const r=new at(T.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<b("featurelayer-query-max-depth"))for(const n of t.createChildTiles())yield*this._fetchChunkInfos(e,n,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},ot=class extends Q{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},Zr=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=ne([re(e.signal,()=>this._controller.abort()),re(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}};class Hr extends es{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Zr(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{await this._fetchPages(t)}catch(i){s=i}const r=new ot(T.empty(this._metadata),null,e.tile,-1,!0);if(_s(t.options)||this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let r=0,i=e.pageStart,n=1;for(;r<20&&!e.done;){const a=[];for(let h=0;h<n;h++)a.push(this._fetchChunk(e,i++));const o=await Promise.all(a);for(const h of o)(h.size()!==0||h.first)&&(e.add(h.page,!h.reader.exceededTransferLimit),Y(e.options),this._addChunk(h));r++,n=Math.min(n+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new ot(i,r.inner.toJSON(),s,t,!1)}}let ht=class extends Q{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class Jr extends Kt{constructor(e,t,s,r,i,n){super(e,t,s,i,n),this._random=new ft(1e3),this._featureCount=r}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(a,o)=>o).sort((a,o)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(a=>this._downloadPage(a))),i=new ht(T.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter(a=>a);if(n.length)throw new D("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new ht(s,t.inner.toJSON(),e,!1);return Y(this._options),this._store.insert(r),null}catch(t){return t}}}const Kr="__esri_stream_id__",ut="__esri_timestamp__",ct=1e3;class ei{constructor(e,t,s,r,i=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,this.objectIdField=t,this.purgeInterval=i,this._useGeneratedIds=this.objectIdField===Kr}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){var n;if(this._useGeneratedIds){const a=this._nextId();e.attributes[this.objectIdField]=a,e.objectId=a}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new Xe(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const a=((n=this._purgeOptions)==null?void 0:n.maxObservations)!=null?this._purgeOptions.maxObservations:ct,o=ps(a,0,ct);this._trackIdToObservations.set(s,new Xe(o))}const r=this._trackIdToObservations.get(s),i=r==null?void 0:r.enqueue(t);i!=null&&(this._addOrUpdated.has(i)?this._addOrUpdated.delete(i):this._removed.push(i))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const r=[];if(t!=null)for(const n of t){const a=this.store.removeById(n);a!=null&&r.push(a)}const i=[];if(e!=null){const n=new Set(t??[]);for(const a of e)n.has(a.objectId)||(a.attributes[ut]=s,this.store.add(a),i.push(a))}return!(!i.length&&!(r!=null&&r.length))&&(this.store.update(i,r),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){var i;const t=(i=this._timeInfo)==null?void 0:i.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(n=>{n.attributes[t]<r&&this._removed.push(n.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[ut]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let U=class extends gt{constructor(u){super(u)}get connectionStatus(){var u;return(u=this.connection)==null?void 0:u.connectionStatus}get errorString(){var u;return(u=this.connection)==null?void 0:u.errorString}};W([ee()],U.prototype,"connection",void 0),W([ee()],U.prototype,"connectionStatus",null),W([ee()],U.prototype,"errorString",null),U=W([pt("esri.views.2d.layers.features.sources.StreamConnectionState")],U);let ti=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return T.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate((e==null?void 0:e.length)??0)}};class si extends Q{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class ri extends Jt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new U,this._forceRefresh=!1,this.events=new Me;const{objectIdField:n,timeInfo:a}=this._metadata,{purgeOptions:o}=t;this._stagingStore=new ti(this._metadata,h=>this.events.emit("features-updated",h)),this._manager=new ei(this._stagingStore,n,a,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){var e;return(e=this._connectionState)==null?void 0:e.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new si(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){var e;this._connection=lt(this._connection),this._connectionState.connection=null,(e=this._handlesGroup)==null||e.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:n,customParameters:a}=this._dataFilter;this._connection=Bs(this._service.source,t,this._streamOptions.outSR,e,n,i,s,r,a),this._handlesGroup=ne([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){var t;(t=this._connection)==null||t.updateCustomParameters(e)}sendMessageToSocket(e){var t;(t=this._connection)==null||t.sendMessageToSocket(e)}sendMessageToClient(e){var t;(t=this._connection)==null||t.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class ii{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new Me,this.featureAdapter=new Fs}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._localEditChunk!=null&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}insert(e){var t,s;b("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),(t=this._localOverridesChunk)!=null&&t.overriddenIds.size&&(e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()),(s=this._localEditChunk)!=null&&s.overriddenIds.size&&this._localEditChunk.removeOverrides(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){b("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyLocalOverrides(e,t){this._localOverridesChunk==null&&(this._localOverridesChunk=new ke(t,"localOverride")),this._localOverridesChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localOverridesChunk.overriddenIds),s.invalidate()}applyLocalEdit(e,t){this._localEditChunk==null&&(this._localEditChunk=new ke(t,"localEdit")),this._localEditChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localEditChunk.overriddenIds),s.invalidate()}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const n=i.getObjectId();s.has(n)||(t(i.copy()),s.add(n))}}}forEachBounds(e,t){const s=$e();for(const r of e)r.getBounds(s)&&t(s)}}class ni{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._onChange=r,this._connection=i,this._updateTracking=new Vs({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new ii(this._onChange),this._metadata=new Re(e.metadata)}destroy(){var e,t;(e=this._strategy)==null||e.destroy(),this._store.destroy(),(t=this._streamMessenger)==null||t.destroy(),this.service.type==="memory"&&this.service.source.map(s=>s.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return $r.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new xt({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){var s;this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=(s=this._strategy)==null?void 0:s.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(r=>this._connection.onEvent({type:"error",tile:e.tile.id,error:r})),this._updateTracking.addPromise(t))}onResume(e){var t;this._updateTracking.addPromise(yt((t=this._strategy)==null?void 0:t.load(e)))}onUnsubscribe(e){var t;this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),(t=this._strategy)==null||t.unload(e)}getLocalEdit(e){return this._updateTracking.addPromise(this._getGetLocalEdit(e))}applyLocalEdit(e){this._didInvalidateData=!0,this._store.applyLocalEdit(e,this.metadata)}async update(e,t){var i,n,a;const s=e.source,r=mt((i=this._schema)==null?void 0:i.mutable,s.mutable);if(!r)return!1;if(b("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,(n=this._queryEngine)==null||n.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),Ge(r,"sourceRefreshVersion")&&((a=this._strategy)==null?void 0:a.refresh))return await this._strategy.refresh(),!0;if(s.type==="feature"&&Ge(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(o){this._connection.onEvent({type:"updateFieldsError",error:o})}}return!1}return!(!Ne(r,"dataFilter")&&!Ne(r,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new se(this._connection))}async _getGetLocalEdit(e){if(e.historicMoment&&this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(e.historicMoment))),e.type==="edit-by-feature"){const r=[...e.added,...e.updated].map(i=>G.fromJSON(i,this.metadata.objectIdField));return{reader:T.fromOptimizedFeatures(r,this.metadata),removed:this._resolveIdentifiers(e.removed)}}const t=this._resolveIdentifiers(e.removed);if(!e.updated.length&&!e.added.length)return{reader:T.empty(this.metadata),removed:t};const s=this._resolveIdentifiers([...e.added,...e.updated]);return{reader:await this._strategy.queryByObjectId(s),removed:t}}_resolveIdentifiers(e){const t=[],s=[];for(const r of e)r.objectId!=null&&r.objectId!==-1?s.push(r.objectId):t.push(r.globalId);if(t.length){const r=new Set(t),i=this.metadata.globalIdField;if(i==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe(n=>{const a=n.readAttribute(i);r.has(a)&&s.push(n.getObjectId())})}return s}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await gs(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const o=new ri(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=o,o}const i=this.service,n=Er.fromSchema(i,this._schema,this._metadata),a=await this._supportSnapshotMode(i,n);return a?new Jr(i,n,this._store,a.featureCount,this.metadata,this._connection):r?new Hr(i,n,this._store,this.metadata,this._connection):new Qr(i,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){var n;const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),(n=this._strategy)==null||n.destroy(),this._strategy=t,b("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map(a=>this._strategy.load(a).then(()=>this._connection.onEvent({type:"loaded",tile:a.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:a.tile.id,error:o}))));this._updateTracking.addPromise(i);try{s&&await i}catch(a){qe(a)}this._connection.onEvent({type:"updateStrategyEnd"}),b("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await Us(i,n.inner,{query:n.customParameters})).data.count,{min:o,max:h}=r.snapshotCountThresholds;return a<=o||r.supportsSnapshotMaxThreshold&&a<h?{featureCount:a}:null}}class ai{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class K{constructor(e){this.inner=e,this.resolver=ws()}}class Hn{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(e){b("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=fs.fromJSON(e.tileInfoJSON);this._tileInfoView=new ys(s),this._source=new ni(e.service,this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),t),this._processor=new Mr(t,this._source),this._handles=ne([fe(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),yt(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){b("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Ys(e)}get features(){var t;const e=(t=this._source)==null?void 0:t.queryEngine;if(!e)throw new D("no-queryEngine","No query engine defined");return e}get aggregates(){var t;const e=(t=this._processor)==null?void 0:t.aggregateQueryEngine;if(!e)throw new D("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}async updateSchema(e,t){return b("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new K({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new K(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new K(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async onEdits(e){if(this._updateLocalEditsRequest!=null)throw new D("InternalError - Already processing an edit");this._updateLocalEditsRequest=new K(e);const t=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(ms(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),h=t**2,d=3/(Math.PI*h),c=2*t,_=Math.ceil(k/c);for(const g of a){const l=g.tile,f=new Float64Array(_*_);for(const p of o){const y=p.getTileReader(l);if(!y)continue;const m=y.getCursor();for(;m.next();){let I=1;if(e.field!=null){const q=m.readAttribute(e.field);I=i?-1*+q:+q+n}const x=m.readXForDisplay()/c,w=m.readYForDisplay()/c,S=Math.floor(x),v=Math.floor(w);if(S<0||v<0||S>=_||v>=_)continue;const $=((.5+S-x)*c)**2+((.5+v-w)*c)**2;if($>h)continue;const C=I*(d*(1-$/h)**2);f[v+S*_]+=C}}for(let p=0;p<f.length;p++)s=Math.min(s,f[p]),r=Math.max(r,f[p])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((o,h)=>o+h.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe(h=>o.push(h.readLegacyFeatureWorldSpace())),o}return null}const s=new Set,r=[],i=t.map(o=>o.reader.getCursor()),n=new ft,a=3*e.sampleSize;for(let o=0;o<a&&r.length<e.sampleSize;o++){const h=i[n.getIntRange(0,t.length-1)];if(h.getSize()===0)continue;const d=n.getIntRange(0,h.getSize()-1);h.setIndex(d);const c=h.getObjectId();s.has(c)||(s.add(c),r.push(h.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,bs(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=Ce(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;b("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Is(this._tileInfoView,t),r=new ai(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(b("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(b("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const r=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const i of r)this._doUpdateSubscriptions(i.inner),i.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,e!=null){const{schema:r,version:i}=e.inner;await this._doUpdateSchema(r,i)}const t=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,t!=null){b("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.inner);const r=await this._source.getLocalEdit(t.inner);await this._processor.applyLocalEdit(r),this._source.applyLocalEdit(r),b("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.inner)}if(this._updateHighlightRequests.length){const r=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const i of r)this._processor.updateHighlight(i.inner),i.resolver.resolve()}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{this._subscriptions.size&&(b("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),b("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(r){qe(r)}t!=null&&t.resolver.resolve(),e!=null&&e.resolver.resolve(),this._updateRequested?(b("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(b("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){var n;b("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:(n=this._tileInfoView)==null?void 0:n.tileInfo},r=await this._source.update(e,t),i=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,r,i),b("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){b("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{Hn as default};
