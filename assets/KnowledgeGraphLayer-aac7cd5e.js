import{V as f,aV as w,A as M,bP as u,e9 as T,n as g,cu as _,e2 as D,e0 as b,e3 as S,M as L,i as r,y as l,bf as v,bh as A,j as E,dF as N,co as k,cl as R}from"./index-c6cfe049.js";import{S as I}from"./MultiOriginJSONSupport-7cf2254f.js";import{a as c,M as C,T as G,E as $}from"./KnowledgeGraphSublayer-4ab47e9d.js";import{l as O}from"./ArcGISService-866655aa.js";import{l as j}from"./BlendLayer-3864a0e6.js";import{e as U}from"./CustomParametersMixin-d7ae0b0b.js";import{b as P}from"./OperationalLayer-d666f103.js";import{j as z}from"./PortalLayer-089ac58c.js";import{f as F}from"./RefreshableLayer-768cbb26.js";import{t as K}from"./ScaleRangeLayer-2709e17c.js";import{p as x}from"./commonProperties-b537568a.js";import{R as V}from"./knowledgeGraphService-7584f89b.js";import"./UniqueValueRenderer-2d905f9d.js";import"./ColorStop-3bd1e817.js";import"./diffUtils-a81eba90.js";import"./colorRamps-2725f079.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-57487c58.js";import"./lengthUtils-806c8c03.js";import"./jsonUtils-17af088a.js";import"./defaults-458d9190.js";import"./defaultsJSON-59981e75.js";import"./styleUtils-12717ade.js";import"./jsonUtils-0cfa0239.js";import"./LRUCache-be26918b.js";import"./Version-d58b3305.js";import"./FieldsIndex-815a254a.js";import"./UnknownTimeZone-b1c85c08.js";import"./OverrideHelper-78bed9ed.js";import"./colorUtils-60e0b64a.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./utils-2af5df8d.js";import"./quantizationUtils-07a0781e.js";import"./heatmapUtils-dc73c34c.js";import"./FeatureStore-81a6f478.js";import"./featureConversionUtils-830d3ed6.js";import"./OptimizedFeature-059c854c.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BoundsStore-7efb30cd.js";import"./PooledRBush-c841393a.js";import"./timeSupport-b14221ad.js";import"./json-48e3ea08.js";import"./QueryEngine-61769534.js";import"./WhereClause-7f089e1b.js";import"./TimeOnly-430d9cda.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-23dcd7dc.js";import"./utils-c1c7e04b.js";import"./utils-ef13d521.js";import"./ClassBreaksDefinition-de3e12a5.js";import"./clientSideDefaults-bc8f2b5a.js";import"./GraphQueryStreaming-d186a353.js";import"./fieldProperties-abc74b98.js";import"./FeatureEffectLayer-ad153b3a.js";import"./FeatureEffect-0fa11288.js";import"./jsonUtils-a377b268.js";import"./parser-7740a44f.js";import"./FeatureReductionLayer-d2b80ebd.js";import"./FeatureReductionSelection-4696fdf2.js";import"./featureLayerUtils-6e37b4eb.js";import"./RelationshipQuery-21a3a6e4.js";import"./labelingInfo-754601fb.js";import"./labelUtils-e96173b2.js";import"./MD5-715f37cd.js";import"./OrderedLayer-4b37be9f.js";import"./OrderByInfo-3aa9a06f.js";import"./TemporalLayer-58903be1.js";import"./TimeInfo-3ab6fbf6.js";import"./FeatureSet-402c1fc5.js";import"./popupUtils-c2bd8f97.js";import"./portalItemUtils-bca17985.js";import"./ElevationInfo-58ee6e4f.js";let s=class extends j(K(F(O(P(z(I(U(R)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(c)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){w(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new M("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await V(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===u.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new C({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await G(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,T(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,o)=>{const a=this._graphTypeLookup.get(o);if(!a)return g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(o);a.type!=="relationship"&&a.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(o))});else if(!e.generateAllSublayers)throw new M("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var a,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,o=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((a=this.knowledgeGraph.dataModel)==null?void 0:a.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):o&&o.size>0&&o.forEach((p,h)=>{const d=this._graphTypeLookup.get(h);switch(d==null?void 0:d.type){case"relationship":t.push(d);break;case"entity":e.push(d)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(o=>{e(o)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const o=this._graphTypeLookup.get(i);o&&(this._addSublayer(o).title=i,o.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(o=>{const a=this._createSublayer(o);i(a)&&t.push(a),this._updateSublayerCaches(o)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const o=e.find(a=>a.type===i.graphType&&a.name===i.graphTypeName);o&&(i.objectType=o,i.read({title:o.name},{origin:"service"}),this._updateSublayerCaches(o))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,o){e[t]="<pending>",i.pendingOperations.push(B(this.inclusionModeDefinition).then(a=>{const n=Y(o);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:a},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return _(e,i)}writeDefinitionSetMap(e,t,i,o){const a=o==null?void 0:o.portalItem,n=o==null?void 0:o.resources,p=D(o==null?void 0:o.origin);if(!a||!n||p==null)return void(e&&(t[i]=b(e,o)));const{inclusionModeDefinition:h}=this;if(!h||this._displaysAllRecords(h))return void(this.definitionSetMap=null);const d=this.originIdOf("inclusionModeDefinition");if(d===u.USER||this._namedTypesModified||p<d)this._saveUrlAsNewResource(t,i,n,a);else if(p===d&&e){const y=b(e,o);S(y)?this._saveUrlAsNewResource(t,i,n,a):t[i]=y}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(e,this.layers,o=>!!o.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(e,this.tables,o=>!o.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((o,a)=>{var p;const n=L(this.sublayerIdsCache,a,()=>new Set);(p=o.members)==null||p.forEach(h=>{n.add(h.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,o,a,n,p,h,d,y;const t=[];for(const m of e)((a=(o=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:o.get(m.typeName))==null?void 0:a.useAllData)===!1&&((d=(h=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(m.typeName))==null?void 0:h.members)!=null&&d.has(m.id))&&t.push(m);this.dataManager.removeFromLayer(t);for(const m of t)(y=this.sublayerIdsCache.get(m.typeName))==null||y.delete(m.id);return this._refreshNamedTypes(),t}};r([l()],s.prototype,"dataManager",void 0),r([l({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],s.prototype,"definitionSetMap",void 0),r([v("definitionSetMap")],s.prototype,"readDefinitionSetMap",null),r([A("definitionSetMap")],s.prototype,"writeDefinitionSetMap",null),r([l()],s.prototype,"inclusionModeDefinition",null),r([l()],s.prototype,"knowledgeGraph",void 0),r([l({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],s.prototype,"layers",void 0),r([l()],s.prototype,"memberEntityTypes",void 0),r([l()],s.prototype,"memberRelationshipTypes",void 0),r([l({type:["KnowledgeGraphLayer"]})],s.prototype,"operationalLayerType",void 0),r([l()],s.prototype,"sublayerIdsCache",void 0),r([l({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],s.prototype,"tables",void 0),r([l({json:{read:!1}})],s.prototype,"type",void 0),r([l(x)],s.prototype,"url",void 0),s=r([E("esri.layers.KnowledgeGraphLayer")],s);const mt=s;async function B(e){const t=await $(e);return new Blob([t],{type:"application/x-protobuf"})}function Y(e){const t=`definitionSetMap-${N()}.dat`,i=k("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{mt as default};
