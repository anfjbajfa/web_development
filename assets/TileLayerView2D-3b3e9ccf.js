import{b as w,d as y,m as I,r as V,e as H,G as v,f as o,g as u,n as T,i as n,y as g,j as q}from"./index-c6cfe049.js";import"./colorUtils-60e0b64a.js";import"./GeometryUtils-a7dec725.js";import"./UpdateTracking2D-ebe3e38b.js";import"./enums-fb32c1bb.js";import"./definitions-f33e80b3.js";import"./defaults-458d9190.js";import"./OverrideHelper-78bed9ed.js";import"./floatRGBA-2ea1fed8.js";import"./Container-5acd0ce7.js";import"./WGLContainer-437ea4a6.js";import"./Texture-6d5abce7.js";import"./enums-2e633670.js";import"./Program-ceb7c31f.js";import"./LabelMetric-18a06377.js";import"./StyleDefinition-df636448.js";import"./enums-fb086c25.js";import"./MagnifierPrograms-38458d9f.js";import"./pbf-459508d1.js";import"./FeatureCommandQueue-117fe953.js";import"./PieChartMeshWriter-ae28c4b3.js";import"./renderState-303ecedc.js";import"./interfaces-8918b36f.js";import"./testSVGPremultipliedAlpha-3a41ff11.js";import{V as U}from"./GraphicsView2D-b64a791b.js";import"./earcut-354b01bb.js";import"./vec3f32-ad1dc57f.js";import{r as b,o as f,n as d}from"./imageUtils-f7f39eac.js";import{f as C,y as Q}from"./LayerView-e36663b3.js";import{h as S}from"./HighlightGraphicContainer-721c2552.js";import{i as $}from"./RefreshableLayerView-90cb0307.js";import{U as P,_ as L,r as k}from"./drapedUtils-651220ab.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./BidiEngine-26aff129.js";import"./OptimizedFeature-059c854c.js";import"./utils-2af5df8d.js";import"./Rect-ea14f53a.js";import"./BindType-d21d71dd.js";import"./Util-bd8e9eff.js";import"./highlightReasons-54b6b965.js";import"./defaultsJSON-59981e75.js";import"./quantizationUtils-07a0781e.js";import"./parser-7740a44f.js";import"./ProgramTemplate-fe288a36.js";import"./VertexElementDescriptor-2925c6af.js";import"./config-1337d16e.js";import"./featureConversionUtils-830d3ed6.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./CircularArray-50add9d1.js";import"./AttributeStore-035e9a1b.js";import"./labelUtils-e96173b2.js";import"./FieldsIndex-815a254a.js";import"./UnknownTimeZone-b1c85c08.js";import"./TimeOnly-430d9cda.js";import"./timeSupport-b14221ad.js";import"./json-48e3ea08.js";import"./diffUtils-a81eba90.js";import"./constants-991354c8.js";import"./lengthUtils-806c8c03.js";import"./TurboLine-572fca47.js";import"./basicInterfaces-d9412f98.js";import"./normalizeUtilsSync-3234a768.js";import"./Bitmap-d271523f.js";import"./TileContainer-47aa2b34.js";import"./AGraphicContainer-76a125c3.js";import"./TechniqueInstance-c60140cc.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-06122f2a.js";import"./popupUtils-70bac4b7.js";const F=[0,0];let a=class extends $(b(C(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,h)=>k(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):H()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return v((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(F,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!o(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const c=new u(m),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,c,t)}}throw s}const l=new u(0,0,0,0);let p;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,l,{signal:r}),l.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,r)}catch(s){if(o(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,l,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){o(i)||T.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([g()],a.prototype,"resampling",null),n([g()],a.prototype,"tilemapCache",null),a=n([q("esri.views.2d.layers.TileLayerView2D")],a);const Yt=a;export{Yt as default};
