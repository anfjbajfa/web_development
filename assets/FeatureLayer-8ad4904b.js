import{fE as Z,h3 as z,A as f,b3 as U,b0 as H,eo as B,aF as K,n as T,fT as q,i as s,h4 as X,o as R,eQ as Y,y as n,j as E,V as L,a2 as ee,bw as te,aY as re,eE as ie,aV as se,bn as I,cs as oe,co as P,fL as x,fX as ae,aS as ne,gM as le,fK as ue,_ as G,c4 as pe,bd as de,U as ye,bv as ce,bf as y,h5 as he,eR as me,bh as $,bl as D,l as fe,el as ge,cl as be,h6 as we}from"./index-c6cfe049.js";import"./UniqueValueRenderer-2d905f9d.js";import{o as ve,m as Se,u as _e}from"./jsonUtils-0cfa0239.js";import{S as Fe}from"./MultiOriginJSONSupport-7cf2254f.js";import{g as Te,l as Ie,a as A,f as Ee,y as $e,v as De,s as Oe,t as je}from"./commonProperties-b537568a.js";import{R as Ce,V as Le}from"./FeatureLayerBase-c91a0e0e.js";import{i as Me}from"./editsZScale-d0d79ab9.js";import{t as N}from"./queryZScale-679c8a27.js";import{d as k}from"./FeatureSet-402c1fc5.js";import{i as qe}from"./APIKeyMixin-99f87d3a.js";import{l as Re}from"./ArcGISService-866655aa.js";import{l as Pe}from"./BlendLayer-3864a0e6.js";import{e as xe}from"./CustomParametersMixin-d7ae0b0b.js";import{F as Ge}from"./EditBusLayer-1e67be81.js";import{c as Ae}from"./FeatureEffectLayer-ad153b3a.js";import{c as Ne}from"./FeatureReductionLayer-d2b80ebd.js";import{b as Je}from"./OperationalLayer-d666f103.js";import{p as Ve}from"./OrderedLayer-4b37be9f.js";import{j as ke}from"./PortalLayer-089ac58c.js";import{f as Qe}from"./RefreshableLayer-768cbb26.js";import{t as We}from"./ScaleRangeLayer-2709e17c.js";import{l as Ze}from"./TemporalLayer-58903be1.js";import{T as ze,v as Ue,R as He,M as Be,U as Ke,m as Xe,w as Ye,b as et,g as tt,x as rt,j as it,I as st,N as ot,L as at,q as nt,F as lt,A as ut,O as pt,P as dt,S as yt,E as ct,y as J}from"./featureLayerUtils-6e37b4eb.js";import{p as Q}from"./FeatureTemplate-1f82a77c.js";import{n as W}from"./FeatureType-b94bd31c.js";import{s as ht}from"./fieldProperties-abc74b98.js";import{C as mt,l as O}from"./labelingInfo-754601fb.js";import{a as ft}from"./serviceCapabilitiesUtils-27401658.js";import{d as gt}from"./TimeInfo-3ab6fbf6.js";import{t as bt}from"./versionUtils-20464c3d.js";import{t as wt}from"./styleUtils-4d80df86.js";import{S}from"./TopFeaturesQuery-4768fc42.js";import{p as vt}from"./popupUtils-c2bd8f97.js";import{A as _}from"./interfaces-f1f22245.js";import"./ColorStop-3bd1e817.js";import"./diffUtils-a81eba90.js";import"./colorRamps-2725f079.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-57487c58.js";import"./lengthUtils-806c8c03.js";import"./jsonUtils-17af088a.js";import"./defaults-458d9190.js";import"./defaultsJSON-59981e75.js";import"./styleUtils-12717ade.js";import"./LRUCache-be26918b.js";import"./Version-d58b3305.js";import"./FieldsIndex-815a254a.js";import"./UnknownTimeZone-b1c85c08.js";import"./OverrideHelper-78bed9ed.js";import"./colorUtils-60e0b64a.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./utils-2af5df8d.js";import"./quantizationUtils-07a0781e.js";import"./heatmapUtils-dc73c34c.js";import"./ElevationInfo-58ee6e4f.js";import"./LayerFloorInfo-b8c105f0.js";import"./Relationship-96215281.js";import"./jsonUtils-a377b268.js";import"./parser-7740a44f.js";import"./FeatureEffect-0fa11288.js";import"./FeatureReductionSelection-4696fdf2.js";import"./MD5-715f37cd.js";import"./OrderByInfo-3aa9a06f.js";import"./portalItemUtils-bca17985.js";import"./RelationshipQuery-21a3a6e4.js";import"./labelUtils-e96173b2.js";let St=0,g=class extends Z.LoadableMixin(z(L)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}get _workerGeometryType(){var t;const e=(t=this.layer)==null?void 0:t.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);N(e,this.layer.spatialReference,r);const i=k.fromJSON(r);if(!this._requiresClientGraphicMapping())return i;const o=this.layer.objectIdField;for(const l of i.features){const u=l.attributes[o],c=this._idToClientGraphic.get(u);c&&(l.geometry=c.geometry)}return i.geometryType=this.layer.geometryType,i}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new f("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return N(e,this.layer.spatialReference,r),r}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(r=>({count:r.count,extent:U.fromJSON(r.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async _applyEdits(e){if(!this._connection)throw new f("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let r=null;const i=[],o=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=p=>"objectId"in p&&p.objectId!=null?p.objectId:"attributes"in p&&p.attributes[t]!=null?p.attributes[t]:null;if(e.addFeatures&&(r=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const p of e.deleteFeatures){const m=l(p);m!=null&&i.push(m)}const u=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const p of e.updateFeatures)if(o.push(this._serializeFeature(p)),u){const m=l(p);m!=null&&u.set(m,p)}}Me(r?r.features:null,o,this.layer.spatialReference);const{fullExtent:c,featureEditResults:d}=await this._connection.invoke("applyEdits",{adds:r?r.features:[],updates:o,deletes:i});return this.fullExtent=c,r&&r.finish(d.uidToObjectId),this._updateClientGraphicIds(u,d),this._createEditsResult(d)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const r=[];for(const{geometry:i}of e)i==null||i.type!=="mesh"||i.hasExtent||i.loaded||r.push(i.load({signal:t}));r.length&&await Promise.all(r)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const r of t.updateResults){if(!r.success)continue;const i=e.get(r.objectId);i!=null&&this._addIdToClientGraphic(i)}for(const r of t.deleteResults)r.success&&this._idToClientGraphic.delete(r.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new f("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,r=new Array(e.length);let i=null;for(let l=0;l<e.length;l++){const u=e[l],c=this._serializeFeature(u);i||u.geometry==null||(i=u.geometry.type),r[l]=c,t.set(`${c.uid}`,u)}const o=this;return{features:r,inferredGeometryType:i,finish(l){const u=o.sourceJSON.objectIdField;for(const c in l){const d=l[c],p=t.get(c);p&&(p.attributes||(p.attributes={}),d===-1?delete p.attributes[u]:p.attributes[u]=d,o._addIdToClientGraphic(p))}}}}_addIdToClientGraphic(e){var i;if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,r=(i=e.attributes)==null?void 0:i[t];r!=null&&this._idToClientGraphic.set(r,e)}get _layerOrSourceGeometryType(){var e,t;return((e=this.layer)==null?void 0:e.geometryType)??((t=this.sourceJSON)==null?void 0:t.geometryType)}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e),i=(St++).toString();return r?{uid:i,geometry:r.toJSON(),attributes:t}:{uid:i,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?H.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await B("MemorySourceWorker",{strategy:K("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,objectIdField:i,hasM:o,hasZ:l,timeInfo:u,dateFieldsTimeZone:c}=this.layer,d=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const p=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",w=>{T.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),w.preventDefault()}));const m={features:p.features,fields:t==null?void 0:t.map(w=>w.toJSON()),geometryType:q.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&o,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:i,spatialReference:d?null:r&&r.toJSON(),timeInfo:(u==null?void 0:u.toJSON())??null,dateFieldsTimeZone:c},b=await this._connection.invoke("load",m,{signal:e});for(const w of b.warnings)T.getLogger(this.layer).warn("#load()",`${w.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:w});b.featureErrors.length&&T.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const M=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(p.inferredGeometryType)&&(M.geometryType=q.toJSON(p.inferredGeometryType)),this.sourceJSON=M,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),p.finish(b.assignedObjectIds)}};s([X({Type:R,ensureType:Y(R)})],g.prototype,"itemType",void 0),s([n()],g.prototype,"type",void 0),s([n({constructOnly:!0})],g.prototype,"layer",void 0),s([n({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([n()],g.prototype,"sourceJSON",void 0),g=s([E("esri.layers.graphics.sources.MemorySource")],g);let v=class extends ee{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([n()],v.prototype,"updating",void 0),s([n()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const _t=v,Ft=Symbol(),Tt=e=>{var t;let r=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const i=this._get("publishingInfo");if(i)return i;const o=new _t;return this._checkPublishingStatus(o),o}_checkPublishingStatus(i){let u=0;const c=async p=>{let m;i.updating=!0;try{m=await this.fetchPublishingStatus()}catch{m="unavailable"}m!=="published"&&m!=="unavailable"||(i.status==="publishing"&&this.refresh(),d.remove()),i.status=m,i.updating=!1,d.removed||(u=setTimeout(c,p,p+125))},d={removed:!1,remove(){this.removed=!0,clearTimeout(u)}};this.when().catch(()=>d.remove()),c(250),this.addHandles(d)}};return t=Ft,s([n({readOnly:!0,clonable:!1})],r.prototype,"publishingInfo",null),r=s([E("esri.layers.mixins.PublishableLayer")],r),r},h="FeatureLayer";function F(e,t){return new f("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function V(e){return e&&e instanceof L}const j=ht();function C(e,t,r){const i=!!(r!=null&&r.writeLayerSchema);return{enabled:i,ignoreOrigin:i}}let a=class extends Ce(Ne(Ae(Tt(Ge(Pe(Ve(Ze(We(Qe(Re(Je(ke(Fe(xe(qe(te(be))))))))))))))))){constructor(...e){super(...e),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=re.WGS84,this.subtypeCode=null,this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=ie(async(t,r,i)=>{const{save:o,saveAs:l}=await G(()=>import("./featureLayerUtils-8a5e7386.js"),["assets/featureLayerUtils-8a5e7386.js","assets/index-c6cfe049.js","assets/index-16a932bd.css","assets/originUtils-cfe4feaf.js","assets/multiOriginJSONSupportUtils-c978f4c3.js","assets/utils-a03ae58c.js","assets/jsonContext-6d2fc6f8.js","assets/portalItemUtils-bca17985.js","assets/saveAPIKeyUtils-6bd85f06.js","assets/saveUtils-ee69ee87.js","assets/fetchService-0cafb47e.js"]);switch(t){case _.SAVE:return o(this,r);case _.SAVE_AS:return l(this,i,r)}})}destroy(){var e;(e=this.source)==null||e.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){var i;const t=e!=null?e.signal:null;if((i=this.portalItem)!=null&&i.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(o=>this.initLayerProperties(o))),Promise.resolve(this);const r=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(se).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const o=await this._fetchFirstValidLayerId(t);o!=null&&(this.layerId=o)}if(!this.url&&!this._hasMemorySource())throw new f("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>ze(this,"load",e));return this.addResolvingPromise(r),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,ft(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){var e;return!(this.loaded&&!((e=this.capabilities)!=null&&e.operations.supportsEditing))&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,r){return this._readEditingEnabled(t,!0,r)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,r,i){this._writeEditingEnabled(e,t,!0,i)}get effectiveEditingEnabled(){return Ue(this)}readIsTable(e,t){return(t=(t==null?void 0:t.layerDefinition)??t).type==="Table"||!t.geometryType}writeIsTable(e,t,r,i){i!=null&&i.writeLayerSchema&&I(r,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return He(t.layerDefinition||t)}readObjectIdField(e,t){return Be(t.layerDefinition||t)}get parsedUrl(){const e=oe(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=P(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=P(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){var o;t=t.layerDefinition||t;const i=(o=t.drawingInfo)==null?void 0:o.renderer;if(i){const l=ve(i,t,r)??void 0;return l||T.getLogger(this).error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),l}return Ke(t,r)}set source(e){const t=this._get("source");t!==e&&(V(t)&&this._resetMemorySource(t),V(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof L?new g({layer:this,items:e}):e:null}readSource(e,t){const r=k.fromJSON(t.featureSet);return new g({layer:this,items:(r==null?void 0:r.features)??[]})}readTemplates(e,t){const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e=e==null?void 0:e.map(l=>Q.fromJSON(l)),this._fixTemplates(e,i),this._fixTemplates(e,o),e}readTitle(e,t){var o,l,u;const r=((o=t.layerDefinition)==null?void 0:o.name)??t.name,i=t.title||((l=t.layerDefinition)==null?void 0:l.title);if(r){const c=(u=this.portalItem)==null?void 0:u.title;if(this.sublayerTitleMode==="item-title")return this.url?ae(this.url,r):r;let d=r;if(!d&&this.url){const p=ne(this.url);p!=null&&(d=p.title)}return d?(this.sublayerTitleMode==="item-title-and-service-name"&&c&&c!==d&&(d=c+" - "+d),le(d)):void 0}if(this.sublayerTitleMode==="item-title"&&i)return i}readTitleFromWebMap(e,t){var r;return t.title||((r=t.layerDefinition)==null?void 0:r.name)}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(o=>o.name.toLowerCase()===r);i&&(r=i.name)}return r}readTypes(e,t){e=(t=t.layerDefinition||t).types;const r=t.editFieldsInfo,i=r==null?void 0:r.creatorField,o=r==null?void 0:r.editorField;return e==null?void 0:e.map(l=>(l=W.fromJSON(l),this._fixTemplates(l.templates,i),this._fixTemplates(l.templates,o),l))}readVisible(e,t){var r;return((r=t.layerDefinition)==null?void 0:r.defaultVisibility)!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){return Xe(this,e,t,h)}async updateAttachment(e,t,r){return Ye(this,e,t,r,h)}async applyEdits(e,t){return et(this,e,t)}async uploadAssets(e,t){return tt(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return vt(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await ue(G(()=>import("./FeatureLayerSource-3f3b2bff.js"),["assets/FeatureLayerSource-3f3b2bff.js","assets/index-c6cfe049.js","assets/index-16a932bd.css","assets/MeshLocalVertexSpace-411e8581.js","assets/meshVertexSpaceUtils-b044d3fd.js","assets/MeshTransform-a9f50040.js","assets/infoFor3D-24efd44a.js","assets/mat4f64-9a8384aa.js","assets/quat-caf9fdb6.js","assets/mat3f64-e19cdcb8.js","assets/quatf64-81e039e4.js","assets/vec42-614f5847.js","assets/vec4f64-430e4feb.js","assets/editingSupport-208b51d8.js","assets/EditBusLayer-1e67be81.js","assets/clientSideDefaults-bc8f2b5a.js","assets/QueryEngineCapabilities-85c4f1d0.js","assets/defaultsJSON-59981e75.js","assets/QueryTask-1b11ab84.js","assets/executeForIds-6228f84d.js","assets/query-6eccb0bd.js","assets/pbfQueryUtils-90563513.js","assets/pbf-459508d1.js","assets/OptimizedFeature-059c854c.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/queryZScale-679c8a27.js","assets/executeQueryJSON-98e87b3a.js","assets/FeatureSet-402c1fc5.js","assets/executeQueryPBF-5326e45a.js","assets/featureConversionUtils-830d3ed6.js","assets/featureLayerUtils-6e37b4eb.js","assets/jsonUtils-0cfa0239.js","assets/UniqueValueRenderer-2d905f9d.js","assets/ColorStop-3bd1e817.js","assets/diffUtils-a81eba90.js","assets/colorRamps-2725f079.js","assets/sizeVariableUtils-d4870b0d.js","assets/visualVariableUtils-57487c58.js","assets/lengthUtils-806c8c03.js","assets/jsonUtils-17af088a.js","assets/defaults-458d9190.js","assets/styleUtils-12717ade.js","assets/LRUCache-be26918b.js","assets/Version-d58b3305.js","assets/FieldsIndex-815a254a.js","assets/UnknownTimeZone-b1c85c08.js","assets/OverrideHelper-78bed9ed.js","assets/colorUtils-60e0b64a.js","assets/utils-2af5df8d.js","assets/quantizationUtils-07a0781e.js","assets/heatmapUtils-dc73c34c.js","assets/RelationshipQuery-21a3a6e4.js","assets/editsZScale-d0d79ab9.js"]),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=rt(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,r=pe(this.definitionExpression,t);return e.where=r||"1=1",e}async deleteAttachments(e,t){return it(this,e,t,h)}async fetchRecomputedExtents(e){return st(this,e,h)}getFeatureType(e){return ot(this.types,this.typeIdField,e)}getFieldDomain(e,t){var l;const r=t==null?void 0:t.feature,i=at(this,r);if(i){const u=(l=i.domains)==null?void 0:l[e];return(u==null?void 0:u.type)==="inherited"?this._getLayerDomain(e):u}const o=this.getFeatureType(r);if(o){const u=o.domains&&o.domains[e];if(u&&u.type!=="inherited")return u}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return nt(this,e,t,h)}async queryFeatures(e,t){const r=await this.load(),i=await r.source.queryFeatures(de.from(e)??r.createQuery(),t);if(i!=null&&i.features)for(const o of i.features)o.layer=o.sourceLayer=r;return i}async queryObjectIds(e,t){return lt(this,e,t,h)}async queryFeatureCount(e,t){return ut(this,e,t,h)}async queryExtent(e,t){return pt(this,e,t,h)}async queryRelatedFeatures(e,t){return dt(this,e,t,h)}async queryRelatedFeaturesCount(e,t){return yt(this,e,t,h)}async queryTopFeatures(e,t){var l;const{source:r,capabilities:i}=await this.load();if(!r.queryTopFeatures||!((l=i==null?void 0:i.query)!=null&&l.supportsTopFeaturesQuery))throw new f(h,"Layer source does not support queryTopFeatures capability");const o=await r.queryTopFeatures(S.from(e),t);if(o!=null&&o.features)for(const u of o.features)u.layer=u.sourceLayer=this;return o}async queryTopObjectIds(e,t){const{source:r,capabilities:i}=await this.load();if(!r.queryTopObjectIds||!(i!=null&&i.query.supportsTopFeaturesQuery))throw new f(h,"Layer source does not support queryTopObjectIds capability");return r.queryTopObjectIds(S.from(e),t)}async queryTopFeaturesExtent(e,t){var o;const{source:r,capabilities:i}=await this.load();if(!r.queryTopExtents||!((o=i==null?void 0:i.query)!=null&&o.supportsTopFeaturesQuery))throw new f(h,"Layer source does not support queryTopExtents capability");return r.queryTopExtents(S.from(e),t)}async queryTopFeatureCount(e,t){var o;const{source:r,capabilities:i}=await this.load();if(!r.queryTopCount||!((o=i==null?void 0:i.query)!=null&&o.supportsTopFeaturesQuery))throw new f(h,"Layer source does not support queryFeatureCount capability");return r.queryTopCount(S.from(e),t)}read(e,t){const r=e.featureCollection;if((r||e.type==="Feature Collection")&&(this.resourceInfo=e),r){const i=r.layers;i&&i.length===1&&(super.read(i[0],t),r.showLegend!=null&&super.read({showLegend:r.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:(t==null?void 0:t.origin)??void 0,writeLayerSchema:(t==null?void 0:t.writeLayerSchema)??this._hasMemorySource()};const{origin:r,layerContainerType:i,messages:o}=t;if(this.dynamicDataSource)return o==null||o.push(F(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((r==="web-map"||r==="web-scene")&&i!=="tables")return o==null||o.push(F(this,`a table source can only be written to tables, not ${i}`)),null;if(this._hasMemorySource())return o==null||o.push(F(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(r==="web-map"||r==="web-scene")&&i==="tables")return o==null||o.push(F(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new f(h,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){var t;return!!this.loaded&&(((t=this.source)==null?void 0:t.type)==="memory"||bt(this,e))}async save(e){return this._debouncedSaveOperations(_.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(_.SAVE_AS,t,e)}_readEditingEnabled(e,t,r){var o;let i=(o=e.layerDefinition)==null?void 0:o.capabilities;return i?this._hasEditingCapability(i):(i=e.capabilities,t&&(r==null?void 0:r.origin)==="web-map"&&!this._hasMemorySource()&&i?this._hasEditingCapability(i):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,r,i){var o,l;if(!e){const u=(l=(o=this.capabilities)==null?void 0:o.operations)!=null&&l.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",u,t),r&&!(i!=null&&i.writeLayerSchema)&&(t.capabilities=u)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return ye(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const r=t.data;if(r)return this.findFirstValidLayerId(r)})}async initLayerProperties(e){var t;return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(t=this.portalItem)==null?void 0:t.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),x(this.renderer,this.fieldsIndex),ce(this.timeInfo,this.fieldsIndex),wt(this,{origin:"service"})}async hasDataChanged(){return ct(this)}async fetchPublishingStatus(){const e=this.source;return e!=null&&e.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){var t,r;const e=((t=this.parsedUrl)==null?void 0:t.path)??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||(r=this.fields)!=null&&r.some(i=>i.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(r=>{var o;const i=(o=r.prototype)==null?void 0:o.attributes;i&&t&&delete i[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new f("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new f("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([y("service","capabilities")],a.prototype,"readCapabilities",null),s([n({json:{origins:{"web-scene":{write:!1}},write:!0}})],a.prototype,"charts",void 0),s([n({readOnly:!0})],a.prototype,"createQueryVersion",null),s([n({json:{read:{source:"layerDefinition.copyrightText"}}})],a.prototype,"copyright",void 0),s([n({json:{read:{source:"layerDefinition.displayField"}}})],a.prototype,"displayField",void 0),s([n({types:he,readOnly:!0})],a.prototype,"defaultSymbol",void 0),s([n({type:me})],a.prototype,"dynamicDataSource",void 0),s([n({type:Boolean})],a.prototype,"editingEnabled",null),s([y(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],a.prototype,"readEditingEnabled",null),s([y("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],a.prototype,"readEditingEnabledFromWebMap",null),s([$(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabled",null),s([$("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],a.prototype,"writeEditingEnabledToWebMap",null),s([n({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),s([n({...j.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:C}}}}})],a.prototype,"fields",void 0),s([n(j.fieldsIndex)],a.prototype,"fieldsIndex",void 0),s([n({type:Le,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"formTemplate",void 0),s([n({json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:C,writer(e,t,r){const i=e?J.toJSON(e):null;i&&I(r,i,t)}}}},read:{source:"layerDefinition.geometryType",reader:J.read}}})],a.prototype,"geometryType",void 0),s([n({json:{read:{source:"layerDefinition.hasM"}}})],a.prototype,"hasM",void 0),s([n({json:{read:{source:"layerDefinition.hasZ"}}})],a.prototype,"hasZ",void 0),s([n(Te)],a.prototype,"id",void 0),s([n({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],a.prototype,"infoFor3D",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],a.prototype,"isTable",void 0),s([y("service","isTable",["type","geometryType"]),y("isTable",["layerDefinition.type","layerDefinition.geometryType"])],a.prototype,"readIsTable",null),s([$("web-map","isTable")],a.prototype,"writeIsTable",null),s([n(Ie)],a.prototype,"labelsVisible",void 0),s([n({type:[mt],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:O,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:{enabled:!0,layerContainerTypes:A}}},name:"layerDefinition.drawingInfo.labelingInfo",read:O,write:!0}})],a.prototype,"labelingInfo",void 0),s([n((()=>{const e=D(Ee);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,r,i){I(i,we(t),r)}}},e})())],a.prototype,"opacity",void 0),s([n($e)],a.prototype,"legendEnabled",void 0),s([n({type:["show","hide"],json:(()=>{const e=D(De.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],a.prototype,"listMode",void 0),s([y("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdField",null),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:C}}}}})],a.prototype,"objectIdField",void 0),s([y("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdField",null),s([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],a.prototype,"operationalLayerType",void 0),s([n(j.outFields)],a.prototype,"outFields",void 0),s([n({readOnly:!0})],a.prototype,"parsedUrl",null),s([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([n(Oe)],a.prototype,"popupEnabled",void 0),s([n({type:fe,json:{name:"popupInfo",write:!0}})],a.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],a.prototype,"defaultPopupTemplate",null),s([n({types:Se,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:_e,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:A,overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,r)=>({ignoreOrigin:r==null?void 0:r.writeLayerSchema})}}})],a.prototype,"renderer",null),s([y("service","renderer",["drawingInfo.renderer","defaultSymbol"]),y("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],a.prototype,"readRenderer",null),s([n()],a.prototype,"resourceInfo",void 0),s([n((()=>{const e=D(je);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],a.prototype,"screenSizePerspectiveEnabled",void 0),s([n({clonable:!1})],a.prototype,"source",null),s([ge("source")],a.prototype,"castSource",null),s([y("portal-item","source",["featureSet"]),y("web-map","source",["featureSet"])],a.prototype,"readSource",null),s([n({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],a.prototype,"spatialReference",void 0),s([n({type:Number})],a.prototype,"subtypeCode",void 0),s([n({type:[Q]})],a.prototype,"templates",void 0),s([y("templates",["editFieldsInfo","creatorField","editorField","templates"])],a.prototype,"readTemplates",null),s([n({type:gt})],a.prototype,"timeInfo",void 0),s([n()],a.prototype,"title",void 0),s([y("service","title",["name"]),y("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],a.prototype,"readTitle",null),s([y("web-map","title",["layerDefinition.name","title"])],a.prototype,"readTitleFromWebMap",null),s([n({type:String})],a.prototype,"sublayerTitleMode",void 0),s([n({json:{read:!1}})],a.prototype,"type",void 0),s([n({type:String})],a.prototype,"typeIdField",void 0),s([y("service","typeIdField"),y("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),s([n({type:[W]})],a.prototype,"types",void 0),s([y("service","types",["types"]),y("types",["layerDefinition.types"])],a.prototype,"readTypes",null),s([n({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],a.prototype,"visible",void 0),s([y("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],a.prototype,"readVisible",null),a=s([E("esri.layers.FeatureLayer")],a);const Gr=a;export{Gr as default};
