import{k as l,P as h,V as g,l as f,i as w,j as d}from"./index-c6cfe049.js";import{t as u,p as n}from"./jsonUtils-0cfa0239.js";import{d as V}from"./FeatureSet-402c1fc5.js";import{f as b,y as S}from"./LayerView-e36663b3.js";import{t as _}from"./GraphicContainer-bb28a40a.js";import{V as T}from"./GraphicsView2D-b64a791b.js";import"./UniqueValueRenderer-2d905f9d.js";import"./ColorStop-3bd1e817.js";import"./diffUtils-a81eba90.js";import"./colorRamps-2725f079.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-57487c58.js";import"./lengthUtils-806c8c03.js";import"./jsonUtils-17af088a.js";import"./defaults-458d9190.js";import"./defaultsJSON-59981e75.js";import"./styleUtils-12717ade.js";import"./LRUCache-be26918b.js";import"./Version-d58b3305.js";import"./FieldsIndex-815a254a.js";import"./UnknownTimeZone-b1c85c08.js";import"./OverrideHelper-78bed9ed.js";import"./colorUtils-60e0b64a.js";import"./vec42-614f5847.js";import"./vec4f64-430e4feb.js";import"./utils-2af5df8d.js";import"./quantizationUtils-07a0781e.js";import"./heatmapUtils-dc73c34c.js";import"./Container-5acd0ce7.js";import"./parser-7740a44f.js";import"./highlightReasons-54b6b965.js";import"./definitions-f33e80b3.js";import"./enums-2e633670.js";import"./Texture-6d5abce7.js";import"./AGraphicContainer-76a125c3.js";import"./TechniqueInstance-c60140cc.js";import"./UpdateTracking2D-ebe3e38b.js";import"./BidiEngine-26aff129.js";import"./OptimizedFeature-059c854c.js";import"./GeometryUtils-a7dec725.js";import"./enums-fb32c1bb.js";import"./Rect-ea14f53a.js";import"./LabelMetric-18a06377.js";import"./Program-ceb7c31f.js";import"./VertexElementDescriptor-2925c6af.js";import"./BindType-d21d71dd.js";import"./Util-bd8e9eff.js";import"./TileContainer-47aa2b34.js";import"./WGLContainer-437ea4a6.js";import"./ProgramTemplate-fe288a36.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-df636448.js";import"./config-1337d16e.js";import"./earcut-354b01bb.js";import"./featureConversionUtils-830d3ed6.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./FeatureCommandQueue-117fe953.js";import"./constants-991354c8.js";import"./AttributeStore-035e9a1b.js";import"./labelUtils-e96173b2.js";import"./TimeOnly-430d9cda.js";import"./timeSupport-b14221ad.js";import"./json-48e3ea08.js";import"./normalizeUtilsSync-3234a768.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,e){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),s=r.hitTest(i);for(const p of s)p.layer=o,p.sourceLayer=o,p.popupTemplate=t;return s}).map(r=>({type:"graphic",graphic:r,layer:o,mapPoint:i}))}update(i){if(this.graphicsViews)for(const e of this.graphicsViews)e.processUpdate(i)}attach(){this.addAttachHandles([l(()=>{var i;return(i=this.layer)==null?void 0:i.featureCollections},i=>{this._clear();for(const{popupInfo:e,featureSet:o,layerDefinition:r}of i){const t=V.fromJSON(o),s=new g(t.features),p=r.drawingInfo,c=e?f.fromJSON(e):null,m=u(p.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.polygonSymbol},i=>{this._graphicsViewMap.polygon.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.lineSymbol},i=>{this._graphicsViewMap.polyline.renderer=new n({symbol:i})},h),l(()=>{var i;return(i=this.layer)==null?void 0:i.pointSymbol},i=>{this._graphicsViewMap.point.renderer=new n({symbol:i})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Ii=y;export{Ii as default};
